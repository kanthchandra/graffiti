\hypertarget{classOperations}{
\section{Operations Class Reference}
\label{classOperations}\index{Operations@{Operations}}
}


{\ttfamily \#include $<$classes.h$>$}

\subsection*{Static Public Member Functions}
\begin{DoxyCompactItemize}
\item 
<<<<<<< HEAD
\hypertarget{classOperations_ab839b731a3e50163ada788ac94f91a75}{
static void \hyperlink{classOperations_ab839b731a3e50163ada788ac94f91a75}{setPallete} (int index)}
\label{classOperations_ab839b731a3e50163ada788ac94f91a75}

\begin{DoxyCompactList}\small\item\em takes no arguments as of now, sets the pallete\mbox{[}\mbox{]} to various colors. In future, should be configured to take array of colors and set the values of the array as the colors for palletes. \item\end{DoxyCompactList}\item 
\hypertarget{classOperations_a184a915f3bf1ca4c3643279138a4e68e}{
static void \hyperlink{classOperations_a184a915f3bf1ca4c3643279138a4e68e}{registerArea} (\hyperlink{structarea}{Area} x)}
\label{classOperations_a184a915f3bf1ca4c3643279138a4e68e}

\begin{DoxyCompactList}\small\item\em Registers an Area struct in the areas vector. \item\end{DoxyCompactList}\item 
\hypertarget{classOperations_a1803df21728747c753cb2fe635b4ee7b}{
static element {\bfseries fetchArea} (int x, int y)}
\label{classOperations_a1803df21728747c753cb2fe635b4ee7b}

\item 
\hypertarget{classOperations_add01a5b901669d4bb67e2f631f5b817a}{
static \hyperlink{classColor}{Color} \hyperlink{classOperations_add01a5b901669d4bb67e2f631f5b817a}{valueBasedColor} (float val, float min, float max)}
\label{classOperations_add01a5b901669d4bb67e2f631f5b817a}

\begin{DoxyCompactList}\small\item\em takes min and max and gives the color of the current val. \item\end{DoxyCompactList}\item 
\hypertarget{classOperations_a6e868999977d002ff2e5b0ef736815d8}{
static void \hyperlink{classOperations_a6e868999977d002ff2e5b0ef736815d8}{simple\_\-line} (\hyperlink{classPoint}{Point} a, \hyperlink{classPoint}{Point} b, float thickness=1.0f)}
\label{classOperations_a6e868999977d002ff2e5b0ef736815d8}

\begin{DoxyCompactList}\small\item\em The generic simple slope line draw. Works for any slope, any angle, anything!. Pass the from, to and the thickness. \item\end{DoxyCompactList}\item 
static void \hyperlink{classOperations_affa7d4015c7dfafb2b5290a7cc64f13d}{simple\_\-line\_\-sparse} (\hyperlink{classPoint}{Point} a, \hyperlink{classPoint}{Point} b, int den=100, float thickness=1.0f)
\begin{DoxyCompactList}\small\item\em managed to write a function that takes the density of the line by the user. Density specified as dots per unit, will draw the line with somany dots per unit. \item\end{DoxyCompactList}\item 
\hypertarget{classOperations_abc4a84859351c624f24e1f9cd3df7c38}{
static void \hyperlink{classOperations_abc4a84859351c624f24e1f9cd3df7c38}{bresenham} (\hyperlink{classPoint}{Point} a, \hyperlink{classPoint}{Point} b, float thickness=1.0f)}
\label{classOperations_abc4a84859351c624f24e1f9cd3df7c38}

\begin{DoxyCompactList}\small\item\em The generic bresenham. Works for any slope, any angle, anything! \item\end{DoxyCompactList}\item 
static void \hyperlink{classOperations_a081289c54f417f280eaaa457b7331b79}{midpointcircle} (\hyperlink{classPoint}{Point}, float, \hyperlink{classColor}{Color}, int, \hyperlink{classColor}{Color}, float)
\begin{DoxyCompactList}\small\item\em Just the prototype here -\/ declared later for obvious reasons -\/ it needs line object and the line objects are declared and defined only later. \item\end{DoxyCompactList}\end{DoxyCompactItemize}
=======
\hypertarget{classOperations_a8657f54e02cac774a488d6e8731c5986}{
static void \hyperlink{classOperations_a8657f54e02cac774a488d6e8731c5986}{bresenham} (\hyperlink{classPoint}{Point} a, \hyperlink{classPoint}{Point} b, int thickness)}
\label{classOperations_a8657f54e02cac774a488d6e8731c5986}

\begin{DoxyCompactList}\small\item\em The generic bresenham. Works for any slope, any angle, anything! \item\end{DoxyCompactList}\item 
\hypertarget{classOperations_a4596a2e2e90f52ef99fcbb768c14ca04}{
static void \hyperlink{classOperations_a4596a2e2e90f52ef99fcbb768c14ca04}{midpointcircle} (\hyperlink{classPoint}{Point} point, float radius)}
\label{classOperations_a4596a2e2e90f52ef99fcbb768c14ca04}

\begin{DoxyCompactList}\small\item\em This function draws a circle at the given \hyperlink{classPoint}{Point}, and with radius. \item\end{DoxyCompactList}\end{DoxyCompactItemize}
>>>>>>> 09950c976b5a614a45a67cda2544cee9295383b3


\subsection{Detailed Description}
\hyperlink{classOperations}{Operations} : A class that has static functions. meaning, you can call these functions as Operations::function() without bothering to create an object of that particular class. 

<<<<<<< HEAD
\subsection{Member Function Documentation}
\hypertarget{classOperations_a081289c54f417f280eaaa457b7331b79}{
\index{Operations@{Operations}!midpointcircle@{midpointcircle}}
\index{midpointcircle@{midpointcircle}!Operations@{Operations}}
\subsubsection[{midpointcircle}]{\setlength{\rightskip}{0pt plus 5cm}void Operations::midpointcircle ({\bf Point} {\em point}, \/  float {\em radius}, \/  {\bf Color} {\em lc}, \/  int {\em fill}, \/  {\bf Color} {\em fc}, \/  float {\em thickness} = {\ttfamily 1.0f})\hspace{0.3cm}{\ttfamily  \mbox{[}static\mbox{]}}}}
\label{classOperations_a081289c54f417f280eaaa457b7331b79}


Just the prototype here -\/ declared later for obvious reasons -\/ it needs line object and the line objects are declared and defined only later. 

This function draws a circle at the given \hyperlink{classPoint}{Point}, and with radius. This takes \hyperlink{classLine}{Line} color, state fo the circle and fill color as arguments. \hypertarget{classOperations_affa7d4015c7dfafb2b5290a7cc64f13d}{
\index{Operations@{Operations}!simple\_\-line\_\-sparse@{simple\_\-line\_\-sparse}}
\index{simple\_\-line\_\-sparse@{simple\_\-line\_\-sparse}!Operations@{Operations}}
\subsubsection[{simple\_\-line\_\-sparse}]{\setlength{\rightskip}{0pt plus 5cm}static void Operations::simple\_\-line\_\-sparse ({\bf Point} {\em a}, \/  {\bf Point} {\em b}, \/  int {\em den} = {\ttfamily 100}, \/  float {\em thickness} = {\ttfamily 1.0f})\hspace{0.3cm}{\ttfamily  \mbox{[}inline, static\mbox{]}}}}
\label{classOperations_affa7d4015c7dfafb2b5290a7cc64f13d}


managed to write a function that takes the density of the line by the user. Density specified as dots per unit, will draw the line with somany dots per unit. 

This can be of use when there is heavy filling work. We can fill it cheaply using about 50 dots per unit. Can also be used for drawing dotted lines ;) as a fluke. 

=======
>>>>>>> 09950c976b5a614a45a67cda2544cee9295383b3
The documentation for this class was generated from the following file:\begin{DoxyCompactItemize}
\item 
\hyperlink{classes_8h}{classes.h}\end{DoxyCompactItemize}

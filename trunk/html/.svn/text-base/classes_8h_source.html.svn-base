<!-- This comment will put IE 6, 7 and 8 in quirks mode -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>classes.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.6.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <img id="MSearchSelect" src="search/search.png"
             onmouseover="return searchBox.OnSearchSelectShow()"
             onmouseout="return searchBox.OnSearchSelectHide()"
             alt=""/>
        <input type="text" id="MSearchField" value="Search" accesskey="S"
             onfocus="searchBox.OnSearchFieldFocus(true)" 
             onblur="searchBox.OnSearchFieldFocus(false)" 
             onkeyup="searchBox.OnSearchFieldChange(event)"/>
        <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.html"><span>File&nbsp;List</span></a></li>
<<<<<<< HEAD
      <li><a href="globals.html"><span>File&nbsp;Members</span></a></li>
=======
>>>>>>> 09950c976b5a614a45a67cda2544cee9295383b3
    </ul>
  </div>
<h1>classes.h</h1><a href="classes_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00007"></a>00007 
<a name="l00008"></a>00008 
<a name="l00009"></a>00009 
<<<<<<< HEAD
<a name="l00010"></a><a class="code" href="structarea.html">00010</a> <span class="keyword">struct </span><a class="code" href="structarea.html">area</a> {
<a name="l00011"></a>00011         <span class="keywordtype">int</span> x0, x1, y0, y1;
<a name="l00012"></a>00012         element label;
<a name="l00013"></a>00013 };
<a name="l00014"></a>00014 <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structarea.html">area</a> <a class="code" href="structarea.html">Area</a>;
<a name="l00015"></a>00015 vector&lt;Area&gt; areas;
<a name="l00016"></a>00016 
<a name="l00017"></a><a class="code" href="classColor.html">00017</a> <span class="keyword">class </span><a class="code" href="classColor.html">Color</a>{
<a name="l00018"></a>00018         <span class="keyword">public</span>:
<a name="l00019"></a>00019                 <span class="keywordtype">float</span> rgb[3];
<a name="l00021"></a>00021                 <a class="code" href="classColor.html#a9a742cbe9f9f4037f5d9f4e81a9b2428" title="Constructor - initializes color to white.">Color</a>(<span class="keywordtype">float</span> r, <span class="keywordtype">float</span> g, <span class="keywordtype">float</span> b){
<a name="l00022"></a>00022                         rgb[0]=r;
<a name="l00023"></a>00023                         rgb[1]=g;
<a name="l00024"></a>00024                         rgb[2]=b;
<a name="l00025"></a>00025                 };
<a name="l00027"></a><a class="code" href="classColor.html#a9a742cbe9f9f4037f5d9f4e81a9b2428">00027</a>                 <a class="code" href="classColor.html#a9a742cbe9f9f4037f5d9f4e81a9b2428" title="Constructor - initializes color to white.">Color</a>(){rgb[0]=0.0f; rgb[1]=0.0f; rgb[2]=0.0f;};
<a name="l00029"></a><a class="code" href="classColor.html#a1cf39cdb0f05d4ad3548973c3b5957b5">00029</a>                 <span class="keywordtype">float</span> <span class="keyword">get</span>(<span class="keywordtype">char</span> color){ 
<a name="l00030"></a>00030                         <span class="keywordflow">switch</span>(color){
<a name="l00031"></a>00031                                 <span class="keywordflow">case</span> <span class="charliteral">&#39;r&#39;</span>:
<a name="l00032"></a>00032                                         <span class="keywordflow">return</span> rgb[0];
<a name="l00033"></a>00033                                         <span class="keywordflow">break</span>;
<a name="l00034"></a>00034                                 <span class="keywordflow">case</span> <span class="charliteral">&#39;g&#39;</span>:
<a name="l00035"></a>00035                                         <span class="keywordflow">return</span> rgb[1];
<a name="l00036"></a>00036                                         <span class="keywordflow">break</span>;
<a name="l00037"></a>00037                                 <span class="keywordflow">case</span> <span class="charliteral">&#39;b&#39;</span>:
<a name="l00038"></a>00038                                         <span class="keywordflow">return</span> rgb[2];
<a name="l00039"></a>00039                                         <span class="keywordflow">break</span>;
<a name="l00040"></a>00040                         }
<a name="l00041"></a>00041                 }
<a name="l00043"></a><a class="code" href="classColor.html#a4dabfcb970d79805cad2fa59a2ca839d">00043</a>                 <span class="keywordtype">void</span> <span class="keyword">set</span>(){ 
<a name="l00044"></a>00044                         glColor3f(rgb[0],rgb[1],rgb[2]);
<a name="l00045"></a>00045                 }
<a name="l00047"></a><a class="code" href="classColor.html#ac1fcaeadc6072c342bd6b8b81bfed000">00047</a>                 <span class="keywordtype">void</span> <a class="code" href="classColor.html#ac1fcaeadc6072c342bd6b8b81bfed000" title="Sets r, g, b as the colors of the current Color object.">setColor</a>(<span class="keywordtype">float</span> r, <span class="keywordtype">float</span> g, <span class="keywordtype">float</span> b){
<a name="l00048"></a>00048                         rgb[0]=r;
<a name="l00049"></a>00049                         rgb[1]=g;
<a name="l00050"></a>00050                         rgb[2]=b;
<a name="l00051"></a>00051                 }
<a name="l00052"></a>00052 };
<a name="l00053"></a>00053 
<a name="l00054"></a><a class="code" href="classes_8h.html#a71bbacd848c0e832f53b82e1f545f391">00054</a> <a class="code" href="classColor.html">Color</a> <a class="code" href="classes_8h.html#a71bbacd848c0e832f53b82e1f545f391" title="A universal color pallete. Any other place, you can use it by just calling pallete[x]...">pallete</a>[6];
<a name="l00055"></a>00055 <a class="code" href="classColor.html">Color</a> uicolors[6];
<a name="l00056"></a>00056 
<a name="l00060"></a><a class="code" href="classPoint.html">00060</a> <span class="keyword">class </span><a class="code" href="classPoint.html">Point</a> {
<a name="l00061"></a>00061         
<a name="l00062"></a>00062         <span class="keyword">public</span>: 
<a name="l00064"></a><a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b">00064</a>                 <span class="keywordtype">float</span> <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[3];
<a name="l00066"></a><a class="code" href="classPoint.html#ae420250ca4ff8cc21e18b09ed64bc2fd">00066</a>                 <span class="keywordtype">float</span> <a class="code" href="classPoint.html#ae420250ca4ff8cc21e18b09ed64bc2fd" title="The Thickness of the point.">thickness</a>;
<a name="l00068"></a><a class="code" href="classPoint.html#acab939461b8419912a164f70467b126f">00068</a>                 <a class="code" href="classColor.html">Color</a> <a class="code" href="classPoint.html#acab939461b8419912a164f70467b126f" title="stores the color of the point, rarely required, will probably remove in future.">color</a>;
<a name="l00070"></a><a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80">00070</a>                 <span class="keywordtype">float</span>* <a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>(){
<a name="l00071"></a>00071                         <span class="keywordflow">return</span> <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>;
<a name="l00072"></a>00072                 }
<a name="l00074"></a><a class="code" href="classPoint.html#abcfe0f37e59c9a90e0c8997ebd0cd788">00074</a>                 <span class="keywordtype">void</span> <a class="code" href="classPoint.html#abcfe0f37e59c9a90e0c8997ebd0cd788" title="call it with three arguments to set the coordinates of a point.">setCoords</a>(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y, <span class="keywordtype">float</span> z){
<a name="l00075"></a>00075                         <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[0]=x;
<a name="l00076"></a>00076                         <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[1]=y;
<a name="l00077"></a>00077                         <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[2]=z;
<a name="l00078"></a>00078                 }
<a name="l00079"></a>00079                 <span class="keywordtype">void</span> setThickness(<span class="keywordtype">float</span> x){
<a name="l00080"></a>00080                         <a class="code" href="classPoint.html#ae420250ca4ff8cc21e18b09ed64bc2fd" title="The Thickness of the point.">thickness</a>=x;
<a name="l00081"></a>00081                 }
<a name="l00083"></a><a class="code" href="classPoint.html#a05b275095eb888843c4238589f015941">00083</a>                 <span class="keywordtype">void</span> <a class="code" href="classPoint.html#a05b275095eb888843c4238589f015941" title="call it with two arguments to set the coordinates of a point. Added due to demand...">setCoords</a>(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y){
<a name="l00084"></a>00084                         <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[0]=x;
<a name="l00085"></a>00085                         <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[1]=y;
<a name="l00086"></a>00086                         <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[2]=0.0f;
<a name="l00087"></a>00087                 }
<a name="l00089"></a><a class="code" href="classPoint.html#ad92f2337b839a94ce97dcdb439b4325a">00089</a>                 <a class="code" href="classPoint.html#ad92f2337b839a94ce97dcdb439b4325a" title="General constructors and destructors, empty.">Point</a>() {<a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[0]=0.0f, <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[1]=0.0f,<a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[2]=0.0f;};
<a name="l00090"></a>00090                 ~<a class="code" href="classPoint.html">Point</a>() {};
<a name="l00092"></a><a class="code" href="classPoint.html#a405838cb39b8fb6119633d9ba7e6b4fb">00092</a>                 <a class="code" href="classPoint.html#a405838cb39b8fb6119633d9ba7e6b4fb" title="Constructor with only coordinates, Color defaults to white.">Point</a>(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y, <span class="keywordtype">float</span> z){
<a name="l00093"></a>00093                         <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[0]=x;
<a name="l00094"></a>00094                         <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[1]=y;
<a name="l00095"></a>00095                         <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[2]=z;
<a name="l00096"></a>00096                         <a class="code" href="classColor.html">Color</a> <a class="code" href="classPoint.html#acab939461b8419912a164f70467b126f" title="stores the color of the point, rarely required, will probably remove in future.">color</a> (0.0f, 0.0f, 0.0f);
<a name="l00097"></a>00097                 };
<a name="l00099"></a><a class="code" href="classPoint.html#a30bc8409287de4f43e160664be834636">00099</a>                 <a class="code" href="classPoint.html#a30bc8409287de4f43e160664be834636" title="Constructor with only 2 coordinates and no color, z and color default to 0 and white...">Point</a>(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y){
<a name="l00100"></a>00100                         <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[0]=x;
<a name="l00101"></a>00101                         <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[1]=y;
<a name="l00102"></a>00102                         <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[2]=0.0f;
<a name="l00103"></a>00103                         <a class="code" href="classColor.html">Color</a> <a class="code" href="classPoint.html#acab939461b8419912a164f70467b126f" title="stores the color of the point, rarely required, will probably remove in future.">color</a>(0.0f, 0.0f, 0.0f);
<a name="l00104"></a>00104                 };
<a name="l00106"></a><a class="code" href="classPoint.html#a523ef8bde3aff206ba69af38ac8f7ae1">00106</a>                 <a class="code" href="classPoint.html#a523ef8bde3aff206ba69af38ac8f7ae1" title="Constructor with 3 Coordinates and Color.">Point</a>(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y, <span class="keywordtype">float</span> z, <a class="code" href="classColor.html">Color</a> c){
<a name="l00107"></a>00107                         <a class="code" href="classPoint.html#acab939461b8419912a164f70467b126f" title="stores the color of the point, rarely required, will probably remove in future.">color</a>=c;
<a name="l00108"></a>00108                         <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[0]=x;
<a name="l00109"></a>00109                         <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[1]=y;
<a name="l00110"></a>00110                         <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[2]=z;
<a name="l00111"></a>00111                 };
<a name="l00113"></a><a class="code" href="classPoint.html#ae412fd7e0ed49ef9eaf50af195fc5b0d">00113</a>                 <a class="code" href="classPoint.html#ae412fd7e0ed49ef9eaf50af195fc5b0d" title="Construcotor with 2 coordinates and a color. z defaults to 0 again.">Point</a>(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y, <a class="code" href="classColor.html">Color</a> c){
<a name="l00114"></a>00114                         <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[0]=x;
<a name="l00115"></a>00115                         <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[1]=y;
<a name="l00116"></a>00116                         <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[2]=0;
<a name="l00117"></a>00117                         <a class="code" href="classPoint.html#acab939461b8419912a164f70467b126f" title="stores the color of the point, rarely required, will probably remove in future.">color</a>=c;
<a name="l00118"></a>00118                 };
<a name="l00120"></a><a class="code" href="classPoint.html#a59a92024c795154f9c6928862f368e6a">00120</a>                 <span class="keywordtype">void</span> <a class="code" href="classPoint.html#a59a92024c795154f9c6928862f368e6a" title="Draws the Point using glVertex3f. No glBegin(GL_POINTS) or glEnd() here.">draw</a>(){
<a name="l00121"></a>00121                         <a class="code" href="classPoint.html#acab939461b8419912a164f70467b126f" title="stores the color of the point, rarely required, will probably remove in future.">color</a>.<a class="code" href="classColor.html#a4dabfcb970d79805cad2fa59a2ca839d" title="Calls glColor3f(rgb[0],rgb[1],rgb[2]);.">set</a>();
<a name="l00122"></a>00122                         glPointSize(<a class="code" href="classPoint.html#ae420250ca4ff8cc21e18b09ed64bc2fd" title="The Thickness of the point.">thickness</a>);
<a name="l00123"></a>00123                         glBegin(GL_POINTS);
<a name="l00124"></a>00124                         glVertex3f(<a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[0], <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[1], <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[2]);
<a name="l00125"></a>00125                         glEnd();
<a name="l00126"></a>00126                         glPointSize(1.0f);
<a name="l00127"></a>00127                 }
<a name="l00129"></a><a class="code" href="classPoint.html#a062852166797c5e5c62e0ce9a32f4057">00129</a>                 <span class="keywordtype">void</span> <a class="code" href="classPoint.html#a062852166797c5e5c62e0ce9a32f4057" title="multiply the point&amp;#39;s x, y coordinates by a particular scale. Helpful in Graph...">scale</a>(<span class="keywordtype">float</span> x_factor, <span class="keywordtype">float</span> y_factor){
<a name="l00130"></a>00130                         <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[0]*=x_factor;
<a name="l00131"></a>00131                         <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[1]*=y_factor;
<a name="l00132"></a>00132                 }
<a name="l00134"></a><a class="code" href="classPoint.html#ade07f02f5a66f90324202435b897dc63">00134</a>                 <span class="keywordtype">void</span> <a class="code" href="classPoint.html#ade07f02f5a66f90324202435b897dc63" title="multiply the point&amp;#39;s x, y, z coordinates by a particular scale. Helpful in Graph...">scale</a>(<span class="keywordtype">float</span> x_factor, <span class="keywordtype">float</span> y_factor, <span class="keywordtype">float</span> z_factor){
<a name="l00135"></a>00135                         <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[0]*=x_factor;
<a name="l00136"></a>00136                         <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[1]*=y_factor;
<a name="l00137"></a>00137                         <a class="code" href="classPoint.html#a13d4c02fe9e260ca3b9f46ff5be9ee3b" title="stores the x, y, z Coordinates of the points">coords</a>[2]*=z_factor;
<a name="l00138"></a>00138                 }
<a name="l00139"></a>00139 };
<a name="l00140"></a>00140 
<a name="l00144"></a><a class="code" href="classOperations.html">00144</a> <span class="keyword">class </span><a class="code" href="classOperations.html">Operations</a> {
<a name="l00145"></a>00145 
<a name="l00146"></a>00146 
<a name="l00147"></a>00147         <span class="keyword">public</span>:
<a name="l00149"></a><a class="code" href="classOperations.html#ab839b731a3e50163ada788ac94f91a75">00149</a>         <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classOperations.html#ab839b731a3e50163ada788ac94f91a75" title="takes no arguments as of now, sets the pallete[] to various colors. In future, should...">setPallete</a>(<span class="keywordtype">int</span> index){
<a name="l00150"></a>00150                 <span class="keyword">static</span> <span class="keywordtype">float</span> palletes[][18]={{0.7f, 0.7f, 0.7f,
<a name="l00151"></a>00151                                          0.5f, 0.4f, 0.4f,
<a name="l00152"></a>00152                                          0.0f, 0.77f, 1.0f,
<a name="l00153"></a>00153                                          0.3f, 0.5f, 0.2f,
<a name="l00154"></a>00154                                          0.02f, 0.01f, 0.02f,
<a name="l00155"></a>00155                                          0.01f, 0.05f, 0.14f}};
<a name="l00156"></a>00156                 <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0;i&lt;6;i++){
<a name="l00157"></a>00157                         pallete[i].<a class="code" href="classColor.html#ac1fcaeadc6072c342bd6b8b81bfed000" title="Sets r, g, b as the colors of the current Color object.">setColor</a>(palletes[index][i*3], palletes[index][i*3+1], palletes[index][i*3+2]);
<a name="l00158"></a>00158                 }
<a name="l00159"></a>00159         }
<a name="l00161"></a><a class="code" href="classOperations.html#a184a915f3bf1ca4c3643279138a4e68e">00161</a>         <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classOperations.html#a184a915f3bf1ca4c3643279138a4e68e" title="Registers an Area struct in the areas vector.">registerArea</a>(<a class="code" href="structarea.html">Area</a> x){
<a name="l00162"></a>00162                 areas.push_back(x);
<a name="l00163"></a>00163         }
<a name="l00164"></a>00164         <span class="keyword">static</span> element fetchArea(<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y){
<a name="l00165"></a>00165                 vector&lt;Area&gt;::iterator it;
<a name="l00166"></a>00166                 element l;
<a name="l00167"></a>00167                 <span class="keywordflow">for</span> (it=areas.begin(); it!=areas.end(); it++){
<a name="l00168"></a>00168 <span class="comment">//                      cout&lt;&lt;it-&gt;x0&lt;&lt;&quot;, &quot;&lt;&lt;it-&gt;y0&lt;&lt;&quot;, &quot;&lt;&lt;it-&gt;x1&lt;&lt;&quot;, &quot;&lt;&lt;it-&gt;y1&lt;&lt;&quot;\n&quot;;</span>
<a name="l00169"></a>00169                         <span class="keywordflow">if</span>(it-&gt;x0&lt;=x &amp;&amp; it-&gt;y0&lt;=y &amp;&amp; it-&gt;x1&gt;=x &amp;&amp; it-&gt;y1&gt;=y){
<a name="l00170"></a>00170                                 l=it-&gt;label;
<a name="l00171"></a>00171                         }
<a name="l00172"></a>00172                 }
<a name="l00173"></a>00173                 <span class="keywordflow">return</span> l;
<a name="l00174"></a>00174         }
<a name="l00176"></a><a class="code" href="classOperations.html#add01a5b901669d4bb67e2f631f5b817a">00176</a>         <span class="keyword">static</span> <a class="code" href="classColor.html">Color</a> <a class="code" href="classOperations.html#add01a5b901669d4bb67e2f631f5b817a" title="takes min and max and gives the color of the current val.">valueBasedColor</a>( <span class="keywordtype">float</span> val, <span class="keywordtype">float</span> min, <span class="keywordtype">float</span> max){
<a name="l00177"></a>00177                 
<a name="l00178"></a>00178                 <span class="keywordtype">float</span> mean,r,g,b;
<a name="l00179"></a>00179                 mean=0.5f;
<a name="l00180"></a>00180                 val=val-min;
<a name="l00181"></a>00181                 val=val/(max-min);
<a name="l00182"></a>00182                 <span class="keywordflow">if</span>(val&gt;mean)
<a name="l00183"></a>00183                 {
<a name="l00184"></a>00184                         r=val;
<a name="l00185"></a>00185                         g=1-val;
<a name="l00186"></a>00186                         b=0.0f;
<a name="l00187"></a>00187                 }
<a name="l00188"></a>00188                 <span class="keywordflow">else</span>
<a name="l00189"></a>00189                 {
<a name="l00190"></a>00190                         r=1-val;
<a name="l00191"></a>00191                         g=val;
<a name="l00192"></a>00192                         b=0.0f;
<a name="l00193"></a>00193                 }
<a name="l00194"></a>00194                 <a class="code" href="classColor.html">Color</a> c (r,g,b);
<a name="l00195"></a>00195                 <span class="keywordflow">return</span> c;
<a name="l00196"></a>00196         }
<a name="l00197"></a>00197 
<a name="l00198"></a>00198                         
<a name="l00199"></a>00199 
<a name="l00200"></a>00200 
<a name="l00202"></a><a class="code" href="classOperations.html#a6e868999977d002ff2e5b0ef736815d8">00202</a>         <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classOperations.html#a6e868999977d002ff2e5b0ef736815d8" title="The generic simple slope line draw. Works for any slope, any angle, anything!. Pass...">simple_line</a>(<a class="code" href="classPoint.html">Point</a> a, <a class="code" href="classPoint.html">Point</a> b,<span class="keywordtype">float</span> thickness=1.0f ){
<a name="l00203"></a>00203                 <span class="keywordtype">float</span> x0=a.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[0];
<a name="l00204"></a>00204                 <span class="keywordtype">float</span> y0=a.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[1];
<a name="l00205"></a>00205                 <span class="keywordtype">float</span> x1=b.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[0];
<a name="l00206"></a>00206                 <span class="keywordtype">float</span> y1=b.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[1];
<a name="l00207"></a>00207                 <span class="keywordtype">float</span> diffx=(x1-x0)&lt;0?(x0-x1):(x1-x0);
<a name="l00208"></a>00208                 <span class="keywordtype">float</span> diffy=(y1-y0)&lt;0?(y0-y1):(y1-y0);
<a name="l00209"></a>00209                 <span class="keywordtype">int</span> density=(diffx)&gt;(diffy)?(diffx)*1000:(diffy)*1000;
<a name="l00210"></a>00210                 <span class="comment">//cout&lt;&lt;x0&lt;&lt;&quot;,&quot;&lt;&lt;y0&lt;&lt;&quot; to &quot;&lt;&lt;x1&lt;&lt;&quot;,&quot;&lt;&lt;y1&lt;&lt;&quot;\n&quot;;</span>
<a name="l00211"></a>00211                 diffx=x1-x0;
<a name="l00212"></a>00212                 diffy=y1-y0;
<a name="l00213"></a>00213                 <span class="keywordtype">float</span> INCRX=(diffx)/density;
<a name="l00214"></a>00214                 <span class="keywordtype">float</span> INCRY=(diffy)/density;
<a name="l00215"></a>00215                 
<a name="l00216"></a>00216                 <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0;i&lt;density;i++){
<a name="l00217"></a>00217                         glPointSize(thickness);
<a name="l00218"></a>00218                         glBegin(GL_POINTS);
<a name="l00219"></a>00219                         glVertex2f(x0, y0);
<a name="l00220"></a>00220                         glEnd();
<a name="l00221"></a>00221                         glPointSize(1.0f);
<a name="l00222"></a>00222                         x0+=INCRX;
<a name="l00223"></a>00223                         y0+=INCRY;
<a name="l00224"></a>00224                 }
<a name="l00225"></a>00225         }
<a name="l00227"></a><a class="code" href="classOperations.html#affa7d4015c7dfafb2b5290a7cc64f13d">00227</a>         <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classOperations.html#affa7d4015c7dfafb2b5290a7cc64f13d" title="managed to write a function that takes the density of the line by the user. Density...">simple_line_sparse</a>(<a class="code" href="classPoint.html">Point</a> a, <a class="code" href="classPoint.html">Point</a> b, <span class="keywordtype">int</span> den=100, <span class="keywordtype">float</span> thickness=1.0f ){
<a name="l00228"></a>00228                 <span class="keywordtype">float</span> x0=a.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[0];
<a name="l00229"></a>00229                 <span class="keywordtype">float</span> y0=a.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[1];
<a name="l00230"></a>00230                 <span class="keywordtype">float</span> x1=b.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[0];
<a name="l00231"></a>00231                 <span class="keywordtype">float</span> y1=b.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[1];
<a name="l00232"></a>00232                 <span class="keywordtype">float</span> diffx=(x1-x0)&lt;0?(x0-x1):(x1-x0);
<a name="l00233"></a>00233                 <span class="keywordtype">float</span> diffy=(y1-y0)&lt;0?(y0-y1):(y1-y0);
<a name="l00234"></a>00234                 <span class="comment">//cout&lt;&lt;x0&lt;&lt;&quot;,&quot;&lt;&lt;y0&lt;&lt;&quot; to &quot;&lt;&lt;x1&lt;&lt;&quot;,&quot;&lt;&lt;y1&lt;&lt;&quot;\n&quot;;</span>
<a name="l00235"></a>00235                 <span class="keywordtype">int</span> density=(diffx)&gt;(diffy)?(diffx)*den:(diffy)*den;
<a name="l00236"></a>00236                 diffx=x1-x0;
<a name="l00237"></a>00237                 diffy=y1-y0;
<a name="l00238"></a>00238                 <span class="keywordtype">float</span> INCRX=(diffx)/density;
<a name="l00239"></a>00239                 <span class="keywordtype">float</span> INCRY=(diffy)/density;
<a name="l00240"></a>00240                 
<a name="l00241"></a>00241                 <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0;i&lt;density;i++){
<a name="l00242"></a>00242                         glPointSize(thickness);
<a name="l00243"></a>00243                         glBegin(GL_POINTS);
<a name="l00244"></a>00244                         glVertex2f(x0, y0);
<a name="l00245"></a>00245                         glEnd();
<a name="l00246"></a>00246                         glPointSize(1.0f);
<a name="l00247"></a>00247                         x0+=INCRX;
<a name="l00248"></a>00248                         y0+=INCRY;
<a name="l00249"></a>00249                 }
<a name="l00250"></a>00250         }
<a name="l00251"></a>00251         
<a name="l00252"></a>00252 
<a name="l00254"></a><a class="code" href="classOperations.html#abc4a84859351c624f24e1f9cd3df7c38">00254</a>         <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classOperations.html#abc4a84859351c624f24e1f9cd3df7c38" title="The generic bresenham. Works for any slope, any angle, anything!">bresenham</a>(<a class="code" href="classPoint.html">Point</a> a, <a class="code" href="classPoint.html">Point</a> b, <span class="keywordtype">float</span> thickness=1.0f ){
<a name="l00255"></a>00255                 <span class="keywordtype">float</span> x0=a.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[0];
<a name="l00256"></a>00256                 <span class="keywordtype">float</span> y0=a.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[1];
<a name="l00257"></a>00257                 <span class="keywordtype">float</span> x1=b.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[0];
<a name="l00258"></a>00258                 <span class="keywordtype">float</span> y1=b.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[1];
<a name="l00259"></a>00259                 <span class="comment">//cout&lt;&lt;x0&lt;&lt;&quot;,&quot;&lt;&lt;y0&lt;&lt;&quot; to &quot;&lt;&lt;x1&lt;&lt;&quot;,&quot;&lt;&lt;y1&lt;&lt;&quot;\n&quot;;</span>
<a name="l00260"></a>00260 
<a name="l00261"></a>00261                 <span class="keywordtype">float</span> INCR=0.00001;
<a name="l00262"></a>00262                 <span class="keywordtype">float</span> INCRX=0.00001;
<a name="l00263"></a>00263                 <span class="keywordtype">float</span> INCRY=0.00001;
<a name="l00264"></a>00264                 <span class="keywordtype">float</span> dx=x1-x0;
<a name="l00265"></a>00265                 <span class="keywordtype">float</span> dy=y1-y0;
<a name="l00266"></a>00266                 <span class="keywordtype">float</span> x=x0;
<a name="l00267"></a>00267                 <span class="keywordtype">float</span> y=y0;
<a name="l00268"></a>00268 
<a name="l00269"></a>00269                 glPointSize(thickness);
<a name="l00270"></a>00270                 <span class="keywordflow">if</span>(dx&lt;0){
<a name="l00271"></a>00271                         INCRX=0-INCRX;
<a name="l00272"></a>00272                         dx=0-dx;
<a name="l00273"></a>00273                 }
<a name="l00274"></a>00274                 <span class="keywordflow">if</span>(dy&lt;0){
<a name="l00275"></a>00275                         INCRY=0-INCRY;
<a name="l00276"></a>00276                         dy=0-dy;
<a name="l00277"></a>00277                 }
<a name="l00278"></a>00278                 <span class="keywordflow">if</span>(dx==0){
<a name="l00279"></a>00279                         <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0;i&lt;dy/INCR;i++){
<a name="l00280"></a>00280                                 glBegin(GL_POINTS);
<a name="l00281"></a>00281                                 glVertex2f(x0, y0);
<a name="l00282"></a>00282                                 glEnd();
<a name="l00283"></a>00283                                 y0+=INCRY;
<a name="l00284"></a>00284                         }
<a name="l00285"></a>00285                         <span class="keywordflow">return</span>;
<a name="l00286"></a>00286                 }
<a name="l00287"></a>00287                 <span class="keywordtype">float</span> tdy=2*dy;
<a name="l00288"></a>00288                 <span class="keywordtype">float</span> tdyminustdx=tdy-2*dx;
<a name="l00289"></a>00289 
<a name="l00290"></a>00290                 <span class="keywordtype">float</span> p=tdy-dx;
<a name="l00291"></a>00291                 <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0;i&lt;(dx/INCR);i++){
<a name="l00292"></a>00292                         <span class="comment">//cout&lt;&lt;(int)(x*unit)&lt;&lt;&quot;,&quot;&lt;&lt;(int)(y*unit)&lt;&lt;&quot;\n&quot;;</span>
<a name="l00293"></a>00293                         glBegin(GL_POINTS);
<a name="l00294"></a>00294                         glVertex2f(x, y);
<a name="l00295"></a>00295                         glEnd();
<a name="l00296"></a>00296 
<a name="l00297"></a>00297                         <span class="keywordflow">if</span>(p&lt;0.1){
<a name="l00298"></a>00298                                 x+=INCRX;
<a name="l00299"></a>00299                                 p=p+tdy;
<a name="l00300"></a>00300                         }
<a name="l00301"></a>00301                         <span class="keywordflow">else</span>{
<a name="l00302"></a>00302                                 x+=INCRX;
<a name="l00303"></a>00303                                 y+=INCRY;
<a name="l00304"></a>00304                                 p=p+tdyminustdx;
<a name="l00305"></a>00305                         }
<a name="l00306"></a>00306                 }
<a name="l00307"></a>00307                 glPointSize(1.0f);
<a name="l00308"></a>00308         }
<a name="l00310"></a>00310         <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classOperations.html#a081289c54f417f280eaaa457b7331b79" title="Just the prototype here - declared later for obvious reasons - it needs line object...">midpointcircle</a>(<a class="code" href="classPoint.html">Point</a>, <span class="keywordtype">float</span>,<a class="code" href="classColor.html">Color</a>,  <span class="keywordtype">int</span>, <a class="code" href="classColor.html">Color</a>, <span class="keywordtype">float</span>);
<a name="l00311"></a>00311 <span class="comment">/*      /// Not in working condition yet</span>
<a name="l00312"></a>00312 <span class="comment">        static void addToSegfile( label, int x, int y){</span>
<a name="l00313"></a>00313 <span class="comment">                segfile[x][y]=ob;</span>
<a name="l00314"></a>00314 <span class="comment">        }</span>
<a name="l00316"></a>00316 <span class="comment">        static void* getFromSegfile(int x, int y){</span>
<a name="l00317"></a>00317 <span class="comment">                cout&lt;&lt;x&lt;&lt;&quot;, &quot;&lt;&lt;y&lt;&lt;&quot;\n&quot;;</span>
<a name="l00318"></a>00318 <span class="comment">                return segfile[x][y];</span>
<a name="l00319"></a>00319 <span class="comment">        }</span>
<a name="l00320"></a>00320 <span class="comment">        */</span>
<a name="l00321"></a>00321 
<a name="l00322"></a>00322 
<a name="l00323"></a>00323 };
<a name="l00324"></a>00324 
<a name="l00328"></a><a class="code" href="classLine.html">00328</a> <span class="keyword">class </span><a class="code" href="classLine.html">Line</a>{
<a name="l00329"></a>00329         <span class="keyword">public</span>:
<a name="l00331"></a><a class="code" href="classLine.html#ab25ae45978586dbe4c329e917bbfdf1b">00331</a>                 <a class="code" href="classPoint.html">Point</a> <a class="code" href="classLine.html#ab25ae45978586dbe4c329e917bbfdf1b" title="begin point. Can be any point, because the draw function works for +/- slopes.">a</a>;
<a name="l00333"></a><a class="code" href="classLine.html#aea716819f6f2713e6ef5e3b62290bb52">00333</a>                 <a class="code" href="classPoint.html">Point</a> <a class="code" href="classLine.html#aea716819f6f2713e6ef5e3b62290bb52" title="end point. :P">b</a>;
<a name="l00335"></a><a class="code" href="classLine.html#ab43d551232869437084b5905b7a53798">00335</a>                 <a class="code" href="classColor.html">Color</a> <a class="code" href="classLine.html#ab43d551232869437084b5905b7a53798" title="Color of the line. Need to set this because the drawing function explicitly sets...">color</a>;
<a name="l00337"></a><a class="code" href="classLine.html#a97d2192cc259a0513d60b5d170d75788">00337</a>                 <span class="keywordtype">float</span> <a class="code" href="classLine.html#a97d2192cc259a0513d60b5d170d75788" title="Thickness. Mother of God, this is not working!">thickness</a>;
<a name="l00339"></a><a class="code" href="classLine.html#acc13c9d43658fbaa9dd10e609812e257">00339</a>                 <a class="code" href="classLine.html#acc13c9d43658fbaa9dd10e609812e257" title="Constructor - Takes two Point objects from and to.">Line</a>(<a class="code" href="classPoint.html">Point</a> from, <a class="code" href="classPoint.html">Point</a> to, <span class="keywordtype">float</span> t=1.0f){
<a name="l00340"></a>00340                         <a class="code" href="classLine.html#ab25ae45978586dbe4c329e917bbfdf1b" title="begin point. Can be any point, because the draw function works for +/- slopes.">a</a>=from;
<a name="l00341"></a>00341                         <a class="code" href="classLine.html#aea716819f6f2713e6ef5e3b62290bb52" title="end point. :P">b</a>=to;
<a name="l00342"></a>00342                         <a class="code" href="classColor.html">Color</a> <a class="code" href="classLine.html#ab43d551232869437084b5905b7a53798" title="Color of the line. Need to set this because the drawing function explicitly sets...">color</a> (0.0f, 0.0f, 0.0f);
<a name="l00343"></a>00343                         <a class="code" href="classLine.html#a97d2192cc259a0513d60b5d170d75788" title="Thickness. Mother of God, this is not working!">thickness</a>=t;
<a name="l00344"></a>00344                 };
<a name="l00346"></a><a class="code" href="classLine.html#acc11b8a429d8cdd63ba6803dff5602b3">00346</a>                 <a class="code" href="classLine.html#acc11b8a429d8cdd63ba6803dff5602b3" title="Empty Constructor.">Line</a>(){};
<a name="l00348"></a><a class="code" href="classLine.html#aabe85f48d22d92b62257091f48174fac">00348</a>                 <a class="code" href="classLine.html#aabe85f48d22d92b62257091f48174fac" title="and destructor. Phew!">~Line</a>() {};
<a name="l00350"></a><a class="code" href="classLine.html#a9bc53a1abc2fbc62a086c8f779e2728c">00350</a>                 <a class="code" href="classLine.html#a9bc53a1abc2fbc62a086c8f779e2728c" title="Constructor - Takes two point objects from and to, and a Color object.">Line</a>(<a class="code" href="classPoint.html">Point</a> from, <a class="code" href="classPoint.html">Point</a> to, <a class="code" href="classColor.html">Color</a> c, <span class="keywordtype">float</span> t =1.0f){
<a name="l00351"></a>00351                         <a class="code" href="classLine.html#ab25ae45978586dbe4c329e917bbfdf1b" title="begin point. Can be any point, because the draw function works for +/- slopes.">a</a>=from;
<a name="l00352"></a>00352                         <a class="code" href="classLine.html#aea716819f6f2713e6ef5e3b62290bb52" title="end point. :P">b</a>=to;
<a name="l00353"></a>00353                         <a class="code" href="classLine.html#ab43d551232869437084b5905b7a53798" title="Color of the line. Need to set this because the drawing function explicitly sets...">color</a>=c;
<a name="l00354"></a>00354                         <a class="code" href="classLine.html#a97d2192cc259a0513d60b5d170d75788" title="Thickness. Mother of God, this is not working!">thickness</a>=t;
<a name="l00355"></a>00355                 };
<a name="l00357"></a><a class="code" href="classLine.html#ab65c33d2958f31c95e08e872ba5d42c0">00357</a>                 <a class="code" href="classPoint.html">Point</a> <a class="code" href="classLine.html#ab65c33d2958f31c95e08e872ba5d42c0" title="Returns a Point - one of the from and two. Pass an int - 0 for &amp;#39;from&amp;#39; and...">getPoint</a>(<span class="keywordtype">int</span> index){
<a name="l00358"></a>00358                         <span class="keywordflow">if</span>(index){
<a name="l00359"></a>00359                                 <span class="keywordflow">return</span> <a class="code" href="classLine.html#aea716819f6f2713e6ef5e3b62290bb52" title="end point. :P">b</a>;
<a name="l00360"></a>00360                         }
<a name="l00361"></a>00361                         <span class="keywordflow">else</span>{
<a name="l00362"></a>00362                                 <span class="keywordflow">return</span> <a class="code" href="classLine.html#ab25ae45978586dbe4c329e917bbfdf1b" title="begin point. Can be any point, because the draw function works for +/- slopes.">a</a>;
<a name="l00363"></a>00363                         }
<a name="l00364"></a>00364                 }
<a name="l00366"></a><a class="code" href="classLine.html#adf48f46c29bb4b7d2d3c45f5714f6d85">00366</a>                 <span class="keywordtype">void</span> <a class="code" href="classLine.html#adf48f46c29bb4b7d2d3c45f5714f6d85" title="changes the start and end to some other point. Useful to avoaoid creating new line...">setPoints</a>(<a class="code" href="classPoint.html">Point</a> p1, <a class="code" href="classPoint.html">Point</a> p2){
<a name="l00367"></a>00367                         <a class="code" href="classLine.html#ab25ae45978586dbe4c329e917bbfdf1b" title="begin point. Can be any point, because the draw function works for +/- slopes.">a</a>=p1;
<a name="l00368"></a>00368                         <a class="code" href="classLine.html#aea716819f6f2713e6ef5e3b62290bb52" title="end point. :P">b</a>=p2;
<a name="l00369"></a>00369                 }
<a name="l00371"></a><a class="code" href="classLine.html#ab6265993bf5acbc28830181c3e712f10">00371</a>                 <span class="keywordtype">void</span> <a class="code" href="classLine.html#ab6265993bf5acbc28830181c3e712f10" title="Draws the line itself using Operations::simple_line.">draw</a>(){
<a name="l00372"></a>00372                         <a class="code" href="classLine.html#ab43d551232869437084b5905b7a53798" title="Color of the line. Need to set this because the drawing function explicitly sets...">color</a>.<a class="code" href="classColor.html#a4dabfcb970d79805cad2fa59a2ca839d" title="Calls glColor3f(rgb[0],rgb[1],rgb[2]);.">set</a>();
<a name="l00373"></a>00373                         <a class="code" href="classOperations.html#a6e868999977d002ff2e5b0ef736815d8" title="The generic simple slope line draw. Works for any slope, any angle, anything!. Pass...">Operations::simple_line</a>(<a class="code" href="classLine.html#ab25ae45978586dbe4c329e917bbfdf1b" title="begin point. Can be any point, because the draw function works for +/- slopes.">a</a>, <a class="code" href="classLine.html#aea716819f6f2713e6ef5e3b62290bb52" title="end point. :P">b</a>, <a class="code" href="classLine.html#a97d2192cc259a0513d60b5d170d75788" title="Thickness. Mother of God, this is not working!">thickness</a>);
<a name="l00374"></a>00374                 }
<a name="l00376"></a><a class="code" href="classLine.html#aa91e6539c1228b247d0262cdeb82f28e">00376</a>                 <span class="keywordtype">void</span> <a class="code" href="classLine.html#aa91e6539c1228b247d0262cdeb82f28e" title="sets the thickness of the line - not working">setThickness</a>(<span class="keywordtype">float</span> th){
<a name="l00377"></a>00377                         <a class="code" href="classLine.html#a97d2192cc259a0513d60b5d170d75788" title="Thickness. Mother of God, this is not working!">thickness</a>=th;
<a name="l00378"></a>00378                 }
<a name="l00380"></a><a class="code" href="classLine.html#addd6839231525337be4f715021bb362d">00380</a>                 <span class="keywordtype">void</span> <a class="code" href="classLine.html#addd6839231525337be4f715021bb362d" title="increases thickness - not working">incThickness</a>(<span class="keywordtype">float</span> th){
<a name="l00381"></a>00381                         <a class="code" href="classLine.html#a97d2192cc259a0513d60b5d170d75788" title="Thickness. Mother of God, this is not working!">thickness</a>+=1;
<a name="l00382"></a>00382                 }
<a name="l00384"></a><a class="code" href="classLine.html#a656c3f553cecfd1247488cda3da55532">00384</a>                 <span class="keywordtype">void</span> <a class="code" href="classLine.html#a656c3f553cecfd1247488cda3da55532" title="decreases thickness - not working">decThickness</a>(<span class="keywordtype">float</span> th){
<a name="l00385"></a>00385                         <span class="keywordflow">if</span>(<a class="code" href="classLine.html#a97d2192cc259a0513d60b5d170d75788" title="Thickness. Mother of God, this is not working!">thickness</a>&gt;0){
<a name="l00386"></a>00386                                 <a class="code" href="classLine.html#a97d2192cc259a0513d60b5d170d75788" title="Thickness. Mother of God, this is not working!">thickness</a>--;
<a name="l00387"></a>00387                         }
<a name="l00388"></a>00388                 }
<a name="l00389"></a>00389 };
<a name="l00390"></a>00390 
<a name="l00394"></a><a class="code" href="classFillLine.html">00394</a> <span class="keyword">class </span><a class="code" href="classFillLine.html">FillLine</a>{
<a name="l00395"></a>00395         <span class="keyword">public</span>:
<a name="l00396"></a>00396                 <a class="code" href="classPoint.html">Point</a> a;
<a name="l00397"></a>00397                 <a class="code" href="classPoint.html">Point</a> b;
<a name="l00398"></a>00398                 <a class="code" href="classColor.html">Color</a> color;
<a name="l00399"></a>00399                 <span class="keywordtype">int</span> density;
<a name="l00401"></a><a class="code" href="classFillLine.html#a815a5f368df7032c0b33dc42194760d1">00401</a>                 <a class="code" href="classFillLine.html#a815a5f368df7032c0b33dc42194760d1" title="Constructor - Takes two Point objects from and to.">FillLine</a>(<a class="code" href="classPoint.html">Point</a> from, <a class="code" href="classPoint.html">Point</a> to, <span class="keywordtype">int</span> den=100 ){
<a name="l00402"></a>00402                         a=from;
<a name="l00403"></a>00403                         b=to;
<a name="l00404"></a>00404                         <a class="code" href="classColor.html">Color</a> color (0.0f, 0.0f, 0.0f);
<a name="l00405"></a>00405                         density=den;
<a name="l00406"></a>00406                 };
<a name="l00408"></a><a class="code" href="classFillLine.html#af1c2bf19a6417bfb0b7c8ed99753669e">00408</a>                 <a class="code" href="classFillLine.html#af1c2bf19a6417bfb0b7c8ed99753669e" title="Empty Constructor.">FillLine</a>(){};
<a name="l00409"></a>00409                 ~<a class="code" href="classFillLine.html">FillLine</a>() {};
<a name="l00411"></a><a class="code" href="classFillLine.html#a85ec54557210d6368381fc1f00d7dd9b">00411</a>                 <a class="code" href="classFillLine.html#a85ec54557210d6368381fc1f00d7dd9b" title="Constructor - Takes two point objects from and to, and a Color object.">FillLine</a>(<a class="code" href="classPoint.html">Point</a> from, <a class="code" href="classPoint.html">Point</a> to, <a class="code" href="classColor.html">Color</a> c, <span class="keywordtype">int</span> den){
<a name="l00412"></a>00412                         a=from;
<a name="l00413"></a>00413                         b=to;
<a name="l00414"></a>00414                         color=c;
<a name="l00415"></a>00415                         density=den;
<a name="l00416"></a>00416                 };
<a name="l00418"></a><a class="code" href="classFillLine.html#ab1549420f3225b73b5454116895d159f">00418</a>                 <a class="code" href="classPoint.html">Point</a> <a class="code" href="classFillLine.html#ab1549420f3225b73b5454116895d159f" title="Returns a Point - one of the from and two. Pass an int - 0 for &amp;#39;from&amp;#39; and...">getPoint</a>(<span class="keywordtype">int</span> index){
<a name="l00419"></a>00419                         <span class="keywordflow">if</span>(index){
<a name="l00420"></a>00420                                 <span class="keywordflow">return</span> b;
<a name="l00421"></a>00421                         }
<a name="l00422"></a>00422                         <span class="keywordflow">else</span>{
<a name="l00423"></a>00423                                 <span class="keywordflow">return</span> a;
<a name="l00424"></a>00424                         }
<a name="l00425"></a>00425                 }
<a name="l00427"></a><a class="code" href="classFillLine.html#a54261275f194ad212502d07e5ba6811a">00427</a>                 <span class="keywordtype">void</span> <a class="code" href="classFillLine.html#a54261275f194ad212502d07e5ba6811a" title="Set the begin and end points as p1 and p2.">setPoints</a>(<a class="code" href="classPoint.html">Point</a> p1, <a class="code" href="classPoint.html">Point</a> p2){
<a name="l00428"></a>00428                         a=p1;
<a name="l00429"></a>00429                         b=p2;
<a name="l00430"></a>00430                 }
<a name="l00432"></a><a class="code" href="classFillLine.html#a2293e9abc3b97cf49047143fa4eadd22">00432</a>                 <span class="keywordtype">void</span> <a class="code" href="classFillLine.html#a2293e9abc3b97cf49047143fa4eadd22" title="Draws the line itself using Operations::simple_line_sparse which takes density as...">draw</a>(){
<a name="l00433"></a>00433                         color.<a class="code" href="classColor.html#a4dabfcb970d79805cad2fa59a2ca839d" title="Calls glColor3f(rgb[0],rgb[1],rgb[2]);.">set</a>();
<a name="l00434"></a>00434                         <a class="code" href="classOperations.html#affa7d4015c7dfafb2b5290a7cc64f13d" title="managed to write a function that takes the density of the line by the user. Density...">Operations::simple_line_sparse</a>(a, b, density);
<a name="l00435"></a>00435                 }
<a name="l00436"></a>00436 };
<a name="l00437"></a>00437 
<a name="l00440"></a><a class="code" href="classRectangle.html">00440</a> <span class="keyword">class </span><a class="code" href="classRectangle.html">Rectangle</a>{
<a name="l00441"></a>00441         <span class="keyword">public</span>:
<a name="l00443"></a><a class="code" href="classRectangle.html#a01d642ab38c13839f5223f4e4d522348">00443</a>                 <a class="code" href="classPoint.html">Point</a> <a class="code" href="classRectangle.html#a01d642ab38c13839f5223f4e4d522348" title="bottom left point">a</a>;
<a name="l00445"></a><a class="code" href="classRectangle.html#aef45bb1f5ccaed6eba924949315b33d4">00445</a>                 <a class="code" href="classPoint.html">Point</a> <a class="code" href="classRectangle.html#aef45bb1f5ccaed6eba924949315b33d4" title="top right point">b</a>;
<a name="l00447"></a><a class="code" href="classRectangle.html#a76648c5db5c79a3a7a4e2f9119f8f0db">00447</a>                 <a class="code" href="classColor.html">Color</a> <a class="code" href="classRectangle.html#a76648c5db5c79a3a7a4e2f9119f8f0db" title="The border color.">line_color</a>;
<a name="l00449"></a><a class="code" href="classRectangle.html#ac7e2f59117334107ab68ab0cb649e435">00449</a>                 <a class="code" href="classColor.html">Color</a> <a class="code" href="classRectangle.html#ac7e2f59117334107ab68ab0cb649e435" title="the fill color">fill_color</a>;
<a name="l00451"></a><a class="code" href="classRectangle.html#a4eb560914f1afec55baf499e609b9ac3">00451</a>                 <span class="keywordtype">float</span> <a class="code" href="classRectangle.html#a4eb560914f1afec55baf499e609b9ac3" title="thickness of the border">thickness</a>;
<a name="l00453"></a><a class="code" href="classRectangle.html#a03abff2e874c2cb413228f2a5b096a97">00453</a>                 <span class="keywordtype">int</span> <a class="code" href="classRectangle.html#a03abff2e874c2cb413228f2a5b096a97" title="filled or not?">state</a>;
<a name="l00455"></a><a class="code" href="classRectangle.html#a1b3d3d0a8bea0386222ebe02829c4564">00455</a>                 <a class="code" href="classRectangle.html#a1b3d3d0a8bea0386222ebe02829c4564" title="Constructor - Takes two Point objects from and to. and the thickness of the borderline...">Rectangle</a>(<a class="code" href="classPoint.html">Point</a> from, <a class="code" href="classPoint.html">Point</a> to, <span class="keywordtype">float</span> t= 1.0f){
<a name="l00456"></a>00456                         <a class="code" href="classRectangle.html#a01d642ab38c13839f5223f4e4d522348" title="bottom left point">a</a>=from;
<a name="l00457"></a>00457                         <a class="code" href="classRectangle.html#aef45bb1f5ccaed6eba924949315b33d4" title="top right point">b</a>=to;
<a name="l00458"></a>00458                         <a class="code" href="classColor.html">Color</a> <a class="code" href="classRectangle.html#a76648c5db5c79a3a7a4e2f9119f8f0db" title="The border color.">line_color</a> (0.0f, 0.0f, 0.0f);
<a name="l00459"></a>00459                         <a class="code" href="classRectangle.html#a03abff2e874c2cb413228f2a5b096a97" title="filled or not?">state</a>=0;
<a name="l00460"></a>00460                         <a class="code" href="classRectangle.html#a4eb560914f1afec55baf499e609b9ac3" title="thickness of the border">thickness</a>=t;
<a name="l00461"></a>00461                 };
<a name="l00463"></a><a class="code" href="classRectangle.html#a8a933e0ebd9e80ce91e61ffe87fd577e">00463</a>                 <a class="code" href="classRectangle.html#a8a933e0ebd9e80ce91e61ffe87fd577e" title="Empty Constructor.">Rectangle</a>(){};
<a name="l00464"></a>00464                 ~<a class="code" href="classRectangle.html">Rectangle</a>() {};
<a name="l00466"></a><a class="code" href="classRectangle.html#a85704ad7567f5b3e7c109bde9d72383d">00466</a>                 <a class="code" href="classRectangle.html#a85704ad7567f5b3e7c109bde9d72383d" title="Constructor - Takes two point objects from and to, and a Color object.">Rectangle</a>(<a class="code" href="classPoint.html">Point</a> from, <a class="code" href="classPoint.html">Point</a> to, <a class="code" href="classColor.html">Color</a> c, <span class="keywordtype">float</span> t= 1.0f){
<a name="l00467"></a>00467                         <a class="code" href="classRectangle.html#a01d642ab38c13839f5223f4e4d522348" title="bottom left point">a</a>=from;
<a name="l00468"></a>00468                         <a class="code" href="classRectangle.html#aef45bb1f5ccaed6eba924949315b33d4" title="top right point">b</a>=to;
<a name="l00469"></a>00469                         <a class="code" href="classRectangle.html#a76648c5db5c79a3a7a4e2f9119f8f0db" title="The border color.">line_color</a>=c;
<a name="l00470"></a>00470                         <a class="code" href="classRectangle.html#a03abff2e874c2cb413228f2a5b096a97" title="filled or not?">state</a>=0;
<a name="l00471"></a>00471                         <a class="code" href="classRectangle.html#a4eb560914f1afec55baf499e609b9ac3" title="thickness of the border">thickness</a>=t;
<a name="l00472"></a>00472                 };
<a name="l00474"></a><a class="code" href="classRectangle.html#a938089a864a02b8c2c2a31094f4e464f">00474</a>                 <a class="code" href="classRectangle.html#a938089a864a02b8c2c2a31094f4e464f" title="Most useful constructor - takes from, to, the line ccolor, the fill state (1 - filled...">Rectangle</a>(<a class="code" href="classPoint.html">Point</a> from, <a class="code" href="classPoint.html">Point</a> to, <a class="code" href="classColor.html">Color</a> c, <span class="keywordtype">int</span> st, <a class="code" href="classColor.html">Color</a> c2, <span class="keywordtype">float</span> t=1.0f){
<a name="l00475"></a>00475                         <a class="code" href="classRectangle.html#a01d642ab38c13839f5223f4e4d522348" title="bottom left point">a</a>=from;
<a name="l00476"></a>00476                         <a class="code" href="classRectangle.html#aef45bb1f5ccaed6eba924949315b33d4" title="top right point">b</a>=to;
<a name="l00477"></a>00477                         <a class="code" href="classRectangle.html#a76648c5db5c79a3a7a4e2f9119f8f0db" title="The border color.">line_color</a>=c;
<a name="l00478"></a>00478                         <a class="code" href="classRectangle.html#a03abff2e874c2cb413228f2a5b096a97" title="filled or not?">state</a>=st;
<a name="l00479"></a>00479                         <a class="code" href="classRectangle.html#ac7e2f59117334107ab68ab0cb649e435" title="the fill color">fill_color</a>=c2;
<a name="l00480"></a>00480                         <a class="code" href="classRectangle.html#a4eb560914f1afec55baf499e609b9ac3" title="thickness of the border">thickness</a>=t;
<a name="l00481"></a>00481                 }
<a name="l00483"></a><a class="code" href="classRectangle.html#a4cf8bb3bb6544b25a9da0fc6344713be">00483</a>                 <a class="code" href="classPoint.html">Point</a> <a class="code" href="classRectangle.html#a4cf8bb3bb6544b25a9da0fc6344713be" title="Returns a Point - one of the from and two. Pass an int - 0 for &amp;#39;from&amp;#39; and...">getPoint</a>(<span class="keywordtype">int</span> index){
<a name="l00484"></a>00484                         <span class="keywordflow">if</span>(index){
<a name="l00485"></a>00485                                 <span class="keywordflow">return</span> <a class="code" href="classRectangle.html#aef45bb1f5ccaed6eba924949315b33d4" title="top right point">b</a>;
<a name="l00486"></a>00486                         }
<a name="l00487"></a>00487                         <span class="keywordflow">else</span>{
<a name="l00488"></a>00488                                 <span class="keywordflow">return</span> <a class="code" href="classRectangle.html#a01d642ab38c13839f5223f4e4d522348" title="bottom left point">a</a>;
<a name="l00489"></a>00489                         }
<a name="l00490"></a>00490                 }
<a name="l00492"></a><a class="code" href="classRectangle.html#a50cc48c57eaae5d7f40603d0811d76c2">00492</a>                 <span class="keywordtype">void</span> <a class="code" href="classRectangle.html#a50cc48c57eaae5d7f40603d0811d76c2" title="can be used to change the points of the rectangle. Useful in resizing.">setPoints</a>(<a class="code" href="classPoint.html">Point</a> p1, <a class="code" href="classPoint.html">Point</a> p2){
<a name="l00493"></a>00493                         <a class="code" href="classRectangle.html#a01d642ab38c13839f5223f4e4d522348" title="bottom left point">a</a>=p1;
<a name="l00494"></a>00494                         <a class="code" href="classRectangle.html#aef45bb1f5ccaed6eba924949315b33d4" title="top right point">b</a>=p2;
<a name="l00495"></a>00495                 }
<a name="l00497"></a><a class="code" href="classRectangle.html#a1f32d37e8218eed3d455ea85dc71fae0">00497</a>                 <span class="keywordtype">void</span> <a class="code" href="classRectangle.html#a1f32d37e8218eed3d455ea85dc71fae0" title="toggleFill.">toggleFill</a>(){
<a name="l00498"></a>00498                         <span class="keywordflow">if</span>(<a class="code" href="classRectangle.html#a03abff2e874c2cb413228f2a5b096a97" title="filled or not?">state</a>) <a class="code" href="classRectangle.html#a03abff2e874c2cb413228f2a5b096a97" title="filled or not?">state</a>=0;
<a name="l00499"></a>00499                         <span class="keywordflow">else</span> <a class="code" href="classRectangle.html#a03abff2e874c2cb413228f2a5b096a97" title="filled or not?">state</a>=1;
<a name="l00500"></a>00500                 }
<a name="l00502"></a><a class="code" href="classRectangle.html#ac895c67f1d6337e3b4f72663b17dd299">00502</a>                 <span class="keywordtype">void</span> <a class="code" href="classRectangle.html#ac895c67f1d6337e3b4f72663b17dd299" title="Draws itself using Operations::simple_line and fills itself using Operations::simple_line_sparse...">draw</a>(){
<a name="l00503"></a>00503                         <span class="keywordflow">if</span>(<a class="code" href="classRectangle.html#a03abff2e874c2cb413228f2a5b096a97" title="filled or not?">state</a>){
<a name="l00504"></a>00504                                 <a class="code" href="classPoint.html">Point</a> beg = <a class="code" href="classRectangle.html#a01d642ab38c13839f5223f4e4d522348" title="bottom left point">a</a>;
<a name="l00505"></a>00505                                 <a class="code" href="classPoint.html">Point</a> end = <a class="code" href="classRectangle.html#aef45bb1f5ccaed6eba924949315b33d4" title="top right point">b</a>;
<a name="l00506"></a>00506                                 <a class="code" href="classFillLine.html">FillLine</a> l (<a class="code" href="classRectangle.html#a01d642ab38c13839f5223f4e4d522348" title="bottom left point">a</a>, <a class="code" href="classRectangle.html#aef45bb1f5ccaed6eba924949315b33d4" title="top right point">b</a>, <a class="code" href="classRectangle.html#ac7e2f59117334107ab68ab0cb649e435" title="the fill color">fill_color</a>, 100);
<a name="l00507"></a>00507                                 <span class="keywordflow">for</span>(<span class="keywordtype">float</span> y=<a class="code" href="classRectangle.html#a01d642ab38c13839f5223f4e4d522348" title="bottom left point">a</a>.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[1]; y&lt;<a class="code" href="classRectangle.html#aef45bb1f5ccaed6eba924949315b33d4" title="top right point">b</a>.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[1];y+=0.1){
<a name="l00508"></a>00508                                         beg.<a class="code" href="classPoint.html#abcfe0f37e59c9a90e0c8997ebd0cd788" title="call it with three arguments to set the coordinates of a point.">setCoords</a>(beg.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[0], y);
<a name="l00509"></a>00509                                         end.<a class="code" href="classPoint.html#abcfe0f37e59c9a90e0c8997ebd0cd788" title="call it with three arguments to set the coordinates of a point.">setCoords</a>(end.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[0], y);
<a name="l00510"></a>00510                                         l.<a class="code" href="classFillLine.html#a54261275f194ad212502d07e5ba6811a" title="Set the begin and end points as p1 and p2.">setPoints</a>(beg, end);  
<a name="l00511"></a>00511                                         l.<a class="code" href="classFillLine.html#a2293e9abc3b97cf49047143fa4eadd22" title="Draws the line itself using Operations::simple_line_sparse which takes density as...">draw</a>();
<a name="l00512"></a>00512                                 }
<a name="l00513"></a>00513                         }
<a name="l00514"></a>00514                         <a class="code" href="classRectangle.html#a76648c5db5c79a3a7a4e2f9119f8f0db" title="The border color.">line_color</a>.<a class="code" href="classColor.html#a4dabfcb970d79805cad2fa59a2ca839d" title="Calls glColor3f(rgb[0],rgb[1],rgb[2]);.">set</a>();
<a name="l00515"></a>00515                         <a class="code" href="classPoint.html">Point</a> p = <a class="code" href="classRectangle.html#aef45bb1f5ccaed6eba924949315b33d4" title="top right point">b</a>;
<a name="l00516"></a>00516                         p.<a class="code" href="classPoint.html#abcfe0f37e59c9a90e0c8997ebd0cd788" title="call it with three arguments to set the coordinates of a point.">setCoords</a>(<a class="code" href="classRectangle.html#a01d642ab38c13839f5223f4e4d522348" title="bottom left point">a</a>.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[0], <a class="code" href="classRectangle.html#aef45bb1f5ccaed6eba924949315b33d4" title="top right point">b</a>.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[1]);
<a name="l00517"></a>00517                         <a class="code" href="classOperations.html#a6e868999977d002ff2e5b0ef736815d8" title="The generic simple slope line draw. Works for any slope, any angle, anything!. Pass...">Operations::simple_line</a>(<a class="code" href="classRectangle.html#a01d642ab38c13839f5223f4e4d522348" title="bottom left point">a</a>, p, <a class="code" href="classRectangle.html#a4eb560914f1afec55baf499e609b9ac3" title="thickness of the border">thickness</a>);
<a name="l00518"></a>00518                         <a class="code" href="classOperations.html#a6e868999977d002ff2e5b0ef736815d8" title="The generic simple slope line draw. Works for any slope, any angle, anything!. Pass...">Operations::simple_line</a>(p, <a class="code" href="classRectangle.html#aef45bb1f5ccaed6eba924949315b33d4" title="top right point">b</a>, <a class="code" href="classRectangle.html#a4eb560914f1afec55baf499e609b9ac3" title="thickness of the border">thickness</a>);
<a name="l00519"></a>00519                         p.<a class="code" href="classPoint.html#abcfe0f37e59c9a90e0c8997ebd0cd788" title="call it with three arguments to set the coordinates of a point.">setCoords</a>(<a class="code" href="classRectangle.html#aef45bb1f5ccaed6eba924949315b33d4" title="top right point">b</a>.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[0], <a class="code" href="classRectangle.html#a01d642ab38c13839f5223f4e4d522348" title="bottom left point">a</a>.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[1]);
<a name="l00520"></a>00520                         <a class="code" href="classOperations.html#a6e868999977d002ff2e5b0ef736815d8" title="The generic simple slope line draw. Works for any slope, any angle, anything!. Pass...">Operations::simple_line</a>(p,<a class="code" href="classRectangle.html#aef45bb1f5ccaed6eba924949315b33d4" title="top right point">b</a>, <a class="code" href="classRectangle.html#a4eb560914f1afec55baf499e609b9ac3" title="thickness of the border">thickness</a>);
<a name="l00521"></a>00521                         <a class="code" href="classOperations.html#a6e868999977d002ff2e5b0ef736815d8" title="The generic simple slope line draw. Works for any slope, any angle, anything!. Pass...">Operations::simple_line</a>(<a class="code" href="classRectangle.html#a01d642ab38c13839f5223f4e4d522348" title="bottom left point">a</a>,p, <a class="code" href="classRectangle.html#a4eb560914f1afec55baf499e609b9ac3" title="thickness of the border">thickness</a>);
<a name="l00522"></a>00522                 }
<a name="l00523"></a>00523 };
<a name="l00524"></a>00524 
<a name="l00526"></a><a class="code" href="classOperations.html#a081289c54f417f280eaaa457b7331b79">00526</a> <span class="keywordtype">void</span> <a class="code" href="classOperations.html#a081289c54f417f280eaaa457b7331b79" title="Just the prototype here - declared later for obvious reasons - it needs line object...">Operations::  midpointcircle</a>(<a class="code" href="classPoint.html">Point</a> point, <span class="keywordtype">float</span> radius, <a class="code" href="classColor.html">Color</a> lc, <span class="keywordtype">int</span> fill, <a class="code" href="classColor.html">Color</a> fc, <span class="keywordtype">float</span> thickness=1.0f){
<a name="l00527"></a>00527                 <span class="keywordtype">float</span> xx,yy;
<a name="l00528"></a>00528                 xx=point.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[0];
<a name="l00529"></a>00529                 yy=point.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[1];
<a name="l00530"></a>00530                 <a class="code" href="classPoint.html">Point</a> beg (0.0f, 0.0f, 0.0f);
<a name="l00531"></a>00531                 <a class="code" href="classPoint.html">Point</a> end (0.0f, 0.0f, 0.0f);   
<a name="l00532"></a>00532                 <a class="code" href="classFillLine.html">FillLine</a> l (beg, end, fc,20);
<a name="l00533"></a>00533                 <span class="comment">//cout&lt;&lt;xx&lt;&lt;&quot;,&quot;&lt;&lt;yy&lt;&lt;&quot;\n&quot;;</span>
<a name="l00534"></a>00534                 <span class="keywordtype">float</span> p;
<a name="l00535"></a>00535                 <span class="keywordtype">float</span> x,y;
<a name="l00536"></a>00536                 y=radius;
<a name="l00537"></a>00537                 p=(5/4)-radius;
<a name="l00538"></a>00538                 <span class="keywordflow">for</span>(x=0.0;x&lt;=y;) {
<a name="l00539"></a>00539 
<a name="l00540"></a>00540                         <span class="keywordflow">if</span>(fill){
<a name="l00541"></a>00541                                 beg.<a class="code" href="classPoint.html#abcfe0f37e59c9a90e0c8997ebd0cd788" title="call it with three arguments to set the coordinates of a point.">setCoords</a>(xx-x, yy+y);
<a name="l00542"></a>00542                                 end.<a class="code" href="classPoint.html#abcfe0f37e59c9a90e0c8997ebd0cd788" title="call it with three arguments to set the coordinates of a point.">setCoords</a>(xx+x, yy+y);
<a name="l00543"></a>00543                                 l.<a class="code" href="classFillLine.html#a54261275f194ad212502d07e5ba6811a" title="Set the begin and end points as p1 and p2.">setPoints</a>(beg, end);
<a name="l00544"></a>00544                                 l.<a class="code" href="classFillLine.html#a2293e9abc3b97cf49047143fa4eadd22" title="Draws the line itself using Operations::simple_line_sparse which takes density as...">draw</a>();
<a name="l00545"></a>00545                                 beg.<a class="code" href="classPoint.html#abcfe0f37e59c9a90e0c8997ebd0cd788" title="call it with three arguments to set the coordinates of a point.">setCoords</a>(xx-y, yy+x);
<a name="l00546"></a>00546                                 end.<a class="code" href="classPoint.html#abcfe0f37e59c9a90e0c8997ebd0cd788" title="call it with three arguments to set the coordinates of a point.">setCoords</a>(xx+y, yy+x);
<a name="l00547"></a>00547                                 l.<a class="code" href="classFillLine.html#a54261275f194ad212502d07e5ba6811a" title="Set the begin and end points as p1 and p2.">setPoints</a>(beg, end);
<a name="l00548"></a>00548                                 l.<a class="code" href="classFillLine.html#a2293e9abc3b97cf49047143fa4eadd22" title="Draws the line itself using Operations::simple_line_sparse which takes density as...">draw</a>();
<a name="l00549"></a>00549                                 beg.<a class="code" href="classPoint.html#abcfe0f37e59c9a90e0c8997ebd0cd788" title="call it with three arguments to set the coordinates of a point.">setCoords</a>(xx-x, yy-y);
<a name="l00550"></a>00550                                 end.<a class="code" href="classPoint.html#abcfe0f37e59c9a90e0c8997ebd0cd788" title="call it with three arguments to set the coordinates of a point.">setCoords</a>(xx+x, yy-y);
<a name="l00551"></a>00551                                 l.<a class="code" href="classFillLine.html#a54261275f194ad212502d07e5ba6811a" title="Set the begin and end points as p1 and p2.">setPoints</a>(beg, end);
<a name="l00552"></a>00552                                 l.<a class="code" href="classFillLine.html#a2293e9abc3b97cf49047143fa4eadd22" title="Draws the line itself using Operations::simple_line_sparse which takes density as...">draw</a>();
<a name="l00553"></a>00553                                 beg.<a class="code" href="classPoint.html#abcfe0f37e59c9a90e0c8997ebd0cd788" title="call it with three arguments to set the coordinates of a point.">setCoords</a>(xx-y, yy-x);
<a name="l00554"></a>00554                                 end.<a class="code" href="classPoint.html#abcfe0f37e59c9a90e0c8997ebd0cd788" title="call it with three arguments to set the coordinates of a point.">setCoords</a>(xx+y, yy-x);
<a name="l00555"></a>00555                                 l.<a class="code" href="classFillLine.html#a54261275f194ad212502d07e5ba6811a" title="Set the begin and end points as p1 and p2.">setPoints</a>(beg, end);
<a name="l00556"></a>00556                                 l.<a class="code" href="classFillLine.html#a2293e9abc3b97cf49047143fa4eadd22" title="Draws the line itself using Operations::simple_line_sparse which takes density as...">draw</a>();
<a name="l00557"></a>00557                         }
<a name="l00558"></a>00558                         lc.<a class="code" href="classColor.html#a4dabfcb970d79805cad2fa59a2ca839d" title="Calls glColor3f(rgb[0],rgb[1],rgb[2]);.">set</a>();
<a name="l00559"></a>00559                         glPointSize(thickness);
<a name="l00560"></a>00560                         glBegin(GL_POINTS);
<a name="l00561"></a>00561                         glVertex2f(xx+x, yy+y);
<a name="l00562"></a>00562                         glVertex2f(xx-x, yy+y);
<a name="l00563"></a>00563                         glVertex2f(xx+x, yy-y);
<a name="l00564"></a>00564                         glVertex2f(xx-x, yy-y);
<a name="l00565"></a>00565                         glVertex2f(xx+y, yy+x);
<a name="l00566"></a>00566                         glVertex2f(xx+y, yy-x);
<a name="l00567"></a>00567                         glVertex2f(xx-y, yy+x);
<a name="l00568"></a>00568                         glVertex2f(xx-y, yy-x);
<a name="l00569"></a>00569                         glEnd();
<a name="l00570"></a>00570                         <span class="keywordflow">if</span>(p&lt;0)
<a name="l00571"></a>00571                         {
<a name="l00572"></a>00572                                 x=x+0.005;
<a name="l00573"></a>00573                                 p=p+2*x+0.005;
<a name="l00574"></a>00574                         }
<a name="l00575"></a>00575                         <span class="keywordflow">else</span>
<a name="l00576"></a>00576                         {
<a name="l00577"></a>00577                                 x=x+0.005;
<a name="l00578"></a>00578                                 y=y-0.005;
<a name="l00579"></a>00579                                 p=p+2*x-2*y+0.005;
<a name="l00580"></a>00580                         }
<a name="l00581"></a>00581         
<a name="l00582"></a>00582                 }
<a name="l00583"></a>00583         }
<a name="l00584"></a>00584 
<a name="l00589"></a><a class="code" href="classCircle.html">00589</a> <span class="keyword">class </span><a class="code" href="classCircle.html">Circle</a>{
<a name="l00590"></a>00590         <span class="keyword">public</span>:
<a name="l00592"></a><a class="code" href="classCircle.html#aa50e88d4c8663caede31c4dddce95ee1">00592</a>                 <a class="code" href="classPoint.html">Point</a> <a class="code" href="classCircle.html#aa50e88d4c8663caede31c4dddce95ee1" title="the centre of the circle">centre</a>;
<a name="l00594"></a><a class="code" href="classCircle.html#a1954047a322b9c36f584f8161d182f53">00594</a>                 <a class="code" href="classColor.html">Color</a> <a class="code" href="classCircle.html#a1954047a322b9c36f584f8161d182f53" title="the line color of the circle">line_color</a>;
<a name="l00596"></a><a class="code" href="classCircle.html#a5290ae2d58d7b1be7862f711d7e66262">00596</a>                 <a class="code" href="classColor.html">Color</a> <a class="code" href="classCircle.html#a5290ae2d58d7b1be7862f711d7e66262" title="the fill color of the circle">fill_color</a>;
<a name="l00598"></a><a class="code" href="classCircle.html#af12db617f6e57e628418ee847d66ef36">00598</a>                 <span class="keywordtype">int</span> <a class="code" href="classCircle.html#af12db617f6e57e628418ee847d66ef36" title="filled or not?">state</a>;
<a name="l00600"></a><a class="code" href="classCircle.html#a47644132ec8bec0f3a4e8d0e15bcd5d3">00600</a>                 <span class="keywordtype">float</span> <a class="code" href="classCircle.html#a47644132ec8bec0f3a4e8d0e15bcd5d3" title="the radius.">radius</a>;
<a name="l00602"></a><a class="code" href="classCircle.html#a4b90d79df4d53c6b3b252da3921ca4c4">00602</a>                 <span class="keywordtype">float</span> <a class="code" href="classCircle.html#a4b90d79df4d53c6b3b252da3921ca4c4" title="The tthickness of the border.">thickness</a>;
<a name="l00604"></a><a class="code" href="classCircle.html#a51a1174f8b51cfbd64cda35b1dc9cfa2">00604</a>                 <a class="code" href="classCircle.html#a51a1174f8b51cfbd64cda35b1dc9cfa2" title="Constructor that takes only a Point and a radius and the state of the circle (1-filled...">Circle</a>(<a class="code" href="classPoint.html">Point</a> p, <span class="keywordtype">float</span> r, <span class="keywordtype">int</span> st=0, <span class="keywordtype">float</span> th=1.0f){
<a name="l00605"></a>00605                         <a class="code" href="classColor.html">Color</a> c (0.0f, 0.0f, 0.0f);
<a name="l00606"></a>00606                         <a class="code" href="classCircle.html#a1954047a322b9c36f584f8161d182f53" title="the line color of the circle">line_color</a>=c;
<a name="l00607"></a>00607                         <a class="code" href="classCircle.html#a5290ae2d58d7b1be7862f711d7e66262" title="the fill color of the circle">fill_color</a>=c;
<a name="l00608"></a>00608                         <a class="code" href="classCircle.html#a47644132ec8bec0f3a4e8d0e15bcd5d3" title="the radius.">radius</a>=r;
<a name="l00609"></a>00609                         <a class="code" href="classCircle.html#aa50e88d4c8663caede31c4dddce95ee1" title="the centre of the circle">centre</a>=p;
<a name="l00610"></a>00610                         <a class="code" href="classCircle.html#af12db617f6e57e628418ee847d66ef36" title="filled or not?">state</a>=st;
<a name="l00611"></a>00611                         <a class="code" href="classCircle.html#a4b90d79df4d53c6b3b252da3921ca4c4" title="The tthickness of the border.">thickness</a>=th;
<a name="l00612"></a>00612                 };
<a name="l00614"></a><a class="code" href="classCircle.html#a8a7ef7326271a0a55a4bdf6d6ce9fba1">00614</a>                 <a class="code" href="classCircle.html#a8a7ef7326271a0a55a4bdf6d6ce9fba1" title="Constructor that takes a Point, a radius, a Color.">Circle</a>(<a class="code" href="classPoint.html">Point</a> p, <span class="keywordtype">float</span> r, <a class="code" href="classColor.html">Color</a> color, <span class="keywordtype">float</span> th=1.0f){
<a name="l00615"></a>00615                         <a class="code" href="classCircle.html#a1954047a322b9c36f584f8161d182f53" title="the line color of the circle">line_color</a>=color;
<a name="l00616"></a>00616                         <a class="code" href="classCircle.html#a47644132ec8bec0f3a4e8d0e15bcd5d3" title="the radius.">radius</a>=r;
<a name="l00617"></a>00617                         <a class="code" href="classCircle.html#aa50e88d4c8663caede31c4dddce95ee1" title="the centre of the circle">centre</a>=p;
<a name="l00618"></a>00618                         <a class="code" href="classCircle.html#af12db617f6e57e628418ee847d66ef36" title="filled or not?">state</a>=0;
<a name="l00619"></a>00619                         <a class="code" href="classCircle.html#a4b90d79df4d53c6b3b252da3921ca4c4" title="The tthickness of the border.">thickness</a>=th;
<a name="l00620"></a>00620                 };
<a name="l00622"></a><a class="code" href="classCircle.html#a36b7730d2472f8996ca3616b40659c05">00622</a>                 <a class="code" href="classCircle.html#a36b7730d2472f8996ca3616b40659c05" title="takes the centre as a Point, the radius, the line color, the state of the circle...">Circle</a>(<a class="code" href="classPoint.html">Point</a> p, <span class="keywordtype">float</span> r, <a class="code" href="classColor.html">Color</a> lcolor, <span class="keywordtype">int</span> st, <a class="code" href="classColor.html">Color</a> fcolor, <span class="keywordtype">float</span> th=1.0f){
<a name="l00623"></a>00623                         <a class="code" href="classCircle.html#a1954047a322b9c36f584f8161d182f53" title="the line color of the circle">line_color</a>=lcolor;
<a name="l00624"></a>00624                         <a class="code" href="classCircle.html#a5290ae2d58d7b1be7862f711d7e66262" title="the fill color of the circle">fill_color</a>=fcolor;
<a name="l00625"></a>00625                         <a class="code" href="classCircle.html#a47644132ec8bec0f3a4e8d0e15bcd5d3" title="the radius.">radius</a>=r;
<a name="l00626"></a>00626                         <a class="code" href="classCircle.html#aa50e88d4c8663caede31c4dddce95ee1" title="the centre of the circle">centre</a>=p;
<a name="l00627"></a>00627                         <a class="code" href="classCircle.html#af12db617f6e57e628418ee847d66ef36" title="filled or not?">state</a>=1;
<a name="l00628"></a>00628                         <a class="code" href="classCircle.html#a4b90d79df4d53c6b3b252da3921ca4c4" title="The tthickness of the border.">thickness</a>=th;
<a name="l00629"></a>00629                 };
<a name="l00631"></a><a class="code" href="classCircle.html#ae3f30436e645d73e368e8ee55f8d1650">00631</a>                 <a class="code" href="classCircle.html#ae3f30436e645d73e368e8ee55f8d1650" title="Destructor.">~Circle</a>() {} ;
<a name="l00633"></a><a class="code" href="classCircle.html#a4b389af47e8bd2949e5fda32fd92cbbf">00633</a>                 <a class="code" href="classPoint.html">Point</a> <a class="code" href="classCircle.html#a4b389af47e8bd2949e5fda32fd92cbbf" title="returns Point.">getCentre</a>(){
<a name="l00634"></a>00634                         <span class="keywordflow">return</span> <a class="code" href="classCircle.html#aa50e88d4c8663caede31c4dddce95ee1" title="the centre of the circle">centre</a>;
<a name="l00635"></a>00635                 };
<a name="l00636"></a>00636                 <a class="code" href="classPoint.html">Point</a> setCentre(<a class="code" href="classPoint.html">Point</a> c){
<a name="l00637"></a>00637                         <a class="code" href="classCircle.html#aa50e88d4c8663caede31c4dddce95ee1" title="the centre of the circle">centre</a> = c;
<a name="l00638"></a>00638                 };
<a name="l00640"></a><a class="code" href="classCircle.html#a3a3f7166e7f629e44f9044b0e537eb22">00640</a>                 <span class="keywordtype">void</span> <a class="code" href="classCircle.html#a3a3f7166e7f629e44f9044b0e537eb22" title="calls midpointcircle() function to draw itself.">draw</a>(){
<a name="l00641"></a>00641                         <a class="code" href="classCircle.html#a1954047a322b9c36f584f8161d182f53" title="the line color of the circle">line_color</a>.<a class="code" href="classColor.html#a4dabfcb970d79805cad2fa59a2ca839d" title="Calls glColor3f(rgb[0],rgb[1],rgb[2]);.">set</a>();
<a name="l00642"></a>00642                         <a class="code" href="classOperations.html#a081289c54f417f280eaaa457b7331b79" title="Just the prototype here - declared later for obvious reasons - it needs line object...">Operations::midpointcircle</a>(<a class="code" href="classCircle.html#aa50e88d4c8663caede31c4dddce95ee1" title="the centre of the circle">centre</a>, <a class="code" href="classCircle.html#a47644132ec8bec0f3a4e8d0e15bcd5d3" title="the radius.">radius</a>, <a class="code" href="classCircle.html#a1954047a322b9c36f584f8161d182f53" title="the line color of the circle">line_color</a>, <a class="code" href="classCircle.html#af12db617f6e57e628418ee847d66ef36" title="filled or not?">state</a>, <a class="code" href="classCircle.html#a5290ae2d58d7b1be7862f711d7e66262" title="the fill color of the circle">fill_color</a>, <a class="code" href="classCircle.html#a4b90d79df4d53c6b3b252da3921ca4c4" title="The tthickness of the border.">thickness</a>);
<a name="l00643"></a>00643                 }
<a name="l00644"></a>00644 };
<a name="l00645"></a>00645 
=======
<a name="l00010"></a><a class="code" href="classColor.html">00010</a> <span class="keyword">class </span><a class="code" href="classColor.html">Color</a>{
<a name="l00011"></a>00011         <span class="keyword">public</span>:
<a name="l00012"></a>00012                 <span class="keywordtype">float</span> rgb[3];
<a name="l00014"></a>00014                 <a class="code" href="classColor.html#a9a742cbe9f9f4037f5d9f4e81a9b2428" title="Constructor - initializes color to white.">Color</a>(<span class="keywordtype">float</span> r, <span class="keywordtype">float</span> g, <span class="keywordtype">float</span> b){
<a name="l00015"></a>00015                         rgb[0]=r;
<a name="l00016"></a>00016                         rgb[1]=g;
<a name="l00017"></a>00017                         rgb[2]=b;
<a name="l00018"></a>00018                 };
<a name="l00020"></a><a class="code" href="classColor.html#a9a742cbe9f9f4037f5d9f4e81a9b2428">00020</a>                 <a class="code" href="classColor.html#a9a742cbe9f9f4037f5d9f4e81a9b2428" title="Constructor - initializes color to white.">Color</a>(){rgb[0]=0.0f; rgb[1]=0.0f; rgb[2]=0.0f;};
<a name="l00022"></a><a class="code" href="classColor.html#a1cf39cdb0f05d4ad3548973c3b5957b5">00022</a>                 <span class="keywordtype">float</span> <span class="keyword">get</span>(<span class="keywordtype">char</span> color){ 
<a name="l00023"></a>00023                         <span class="keywordflow">switch</span>(color){
<a name="l00024"></a>00024                                 <span class="keywordflow">case</span> <span class="charliteral">&#39;r&#39;</span>:
<a name="l00025"></a>00025                                         <span class="keywordflow">return</span> rgb[0];
<a name="l00026"></a>00026                                         <span class="keywordflow">break</span>;
<a name="l00027"></a>00027                                 <span class="keywordflow">case</span> <span class="charliteral">&#39;g&#39;</span>:
<a name="l00028"></a>00028                                         <span class="keywordflow">return</span> rgb[1];
<a name="l00029"></a>00029                                         <span class="keywordflow">break</span>;
<a name="l00030"></a>00030                                 <span class="keywordflow">case</span> <span class="charliteral">&#39;b&#39;</span>:
<a name="l00031"></a>00031                                         <span class="keywordflow">return</span> rgb[2];
<a name="l00032"></a>00032                                         <span class="keywordflow">break</span>;
<a name="l00033"></a>00033                         }
<a name="l00034"></a>00034                 }
<a name="l00036"></a><a class="code" href="classColor.html#a4dabfcb970d79805cad2fa59a2ca839d">00036</a>                 <span class="keywordtype">void</span> <span class="keyword">set</span>(){ 
<a name="l00037"></a>00037                         glColor3f(rgb[0],rgb[1],rgb[2]);
<a name="l00038"></a>00038                 }
<a name="l00039"></a>00039 };
<a name="l00040"></a>00040 
<a name="l00043"></a><a class="code" href="classPoint.html">00043</a> <span class="keyword">class </span><a class="code" href="classPoint.html">Point</a>{
<a name="l00044"></a>00044         
<a name="l00045"></a>00045         <span class="keyword">public</span>:
<a name="l00046"></a>00046                 <span class="keywordtype">float</span> coords[3];
<a name="l00047"></a>00047                 <a class="code" href="classColor.html">Color</a> color;
<a name="l00049"></a><a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80">00049</a>                 <span class="keywordtype">float</span>* <a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>(){
<a name="l00050"></a>00050                         <span class="keywordflow">return</span> coords;
<a name="l00051"></a>00051                 }
<a name="l00053"></a><a class="code" href="classPoint.html#abcfe0f37e59c9a90e0c8997ebd0cd788">00053</a>                 <span class="keywordtype">void</span> <a class="code" href="classPoint.html#abcfe0f37e59c9a90e0c8997ebd0cd788" title="call it with three arguments to set the coordinates of a point.">setCoords</a>(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y, <span class="keywordtype">float</span> z){
<a name="l00054"></a>00054                         coords[0]=x;
<a name="l00055"></a>00055                         coords[1]=y;
<a name="l00056"></a>00056                         coords[2]=z;
<a name="l00057"></a>00057                 }
<a name="l00058"></a>00058                 <a class="code" href="classPoint.html">Point</a>() {coords[0]=0.0f, coords[1]=0.0f,coords[2]=0.0f;};
<a name="l00060"></a><a class="code" href="classPoint.html#a405838cb39b8fb6119633d9ba7e6b4fb">00060</a>                 <a class="code" href="classPoint.html#a405838cb39b8fb6119633d9ba7e6b4fb" title="Constructor with only coordinates, Color defaults to white.">Point</a>(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y, <span class="keywordtype">float</span> z){
<a name="l00061"></a>00061                         coords[0]=x;
<a name="l00062"></a>00062                         coords[1]=y;
<a name="l00063"></a>00063                         coords[2]=z;
<a name="l00064"></a>00064                         <a class="code" href="classColor.html">Color</a> color (0.0f, 0.0f, 0.0f);
<a name="l00065"></a>00065                 };
<a name="l00067"></a><a class="code" href="classPoint.html#a30bc8409287de4f43e160664be834636">00067</a>                 <a class="code" href="classPoint.html#a30bc8409287de4f43e160664be834636" title="Constructor with only 2 coordinates and no color, z and color default to 0 and white...">Point</a>(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y){
<a name="l00068"></a>00068                         coords[0]=x;
<a name="l00069"></a>00069                         coords[1]=y;
<a name="l00070"></a>00070                         coords[2]=0.0f;
<a name="l00071"></a>00071                         <a class="code" href="classColor.html">Color</a> color(0.0f, 0.0f, 0.0f);
<a name="l00072"></a>00072                 };
<a name="l00074"></a><a class="code" href="classPoint.html#a523ef8bde3aff206ba69af38ac8f7ae1">00074</a>                 <a class="code" href="classPoint.html#a523ef8bde3aff206ba69af38ac8f7ae1" title="Constructor with 3 Coordinates and Color.">Point</a>(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y, <span class="keywordtype">float</span> z, <a class="code" href="classColor.html">Color</a> c){
<a name="l00075"></a>00075                         color=c;
<a name="l00076"></a>00076                         coords[0]=x;
<a name="l00077"></a>00077                         coords[1]=y;
<a name="l00078"></a>00078                         coords[2]=z;
<a name="l00079"></a>00079                 };
<a name="l00081"></a><a class="code" href="classPoint.html#ae412fd7e0ed49ef9eaf50af195fc5b0d">00081</a>                 <a class="code" href="classPoint.html#ae412fd7e0ed49ef9eaf50af195fc5b0d" title="Construcotor with 2 coordinates and a color. z defaults to 0 again.">Point</a>(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y, <a class="code" href="classColor.html">Color</a> c){
<a name="l00082"></a>00082                         coords[0]=x;
<a name="l00083"></a>00083                         coords[1]=y;
<a name="l00084"></a>00084                         coords[2]=0;
<a name="l00085"></a>00085                         color=c;
<a name="l00086"></a>00086                 };
<a name="l00088"></a><a class="code" href="classPoint.html#a59a92024c795154f9c6928862f368e6a">00088</a>                 <span class="keywordtype">void</span> <a class="code" href="classPoint.html#a59a92024c795154f9c6928862f368e6a" title="Draws the Point using glVertex3f. No glBegin(GL_POINTS) or glEnd() here.">draw</a>(){
<a name="l00089"></a>00089                         color.<a class="code" href="classColor.html#a4dabfcb970d79805cad2fa59a2ca839d" title="Calls glColor3f(rgb[0],rgb[1],rgb[2]);.">set</a>();
<a name="l00090"></a>00090                         glVertex3f(coords[0], coords[1], coords[2]);
<a name="l00091"></a>00091                 }
<a name="l00093"></a><a class="code" href="classPoint.html#a062852166797c5e5c62e0ce9a32f4057">00093</a>                 <span class="keywordtype">void</span> <a class="code" href="classPoint.html#a062852166797c5e5c62e0ce9a32f4057" title="multiply the point&amp;#39;s x, y coordinates by a particular scale. Helpful in Graph...">scale</a>(<span class="keywordtype">float</span> x_factor, <span class="keywordtype">float</span> y_factor){
<a name="l00094"></a>00094                         coords[0]*=x_factor;
<a name="l00095"></a>00095                         coords[1]*=y_factor;
<a name="l00096"></a>00096                 }
<a name="l00098"></a><a class="code" href="classPoint.html#ade07f02f5a66f90324202435b897dc63">00098</a>                 <span class="keywordtype">void</span> <a class="code" href="classPoint.html#ade07f02f5a66f90324202435b897dc63" title="multiply the point&amp;#39;s x, y, z coordinates by a particular scale. Helpful in Graph...">scale</a>(<span class="keywordtype">float</span> x_factor, <span class="keywordtype">float</span> y_factor, <span class="keywordtype">float</span> z_factor){
<a name="l00099"></a>00099                         coords[0]*=x_factor;
<a name="l00100"></a>00100                         coords[1]*=y_factor;
<a name="l00101"></a>00101                         coords[2]*=z_factor;
<a name="l00102"></a>00102                 }
<a name="l00103"></a>00103 };
<a name="l00104"></a>00104 
<a name="l00108"></a><a class="code" href="classOperations.html">00108</a> <span class="keyword">class </span><a class="code" href="classOperations.html">Operations</a>{
<a name="l00109"></a>00109         <span class="keyword">public</span>:
<a name="l00111"></a><a class="code" href="classOperations.html#a8657f54e02cac774a488d6e8731c5986">00111</a>         <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classOperations.html#a8657f54e02cac774a488d6e8731c5986" title="The generic bresenham. Works for any slope, any angle, anything!">bresenham</a>(<a class="code" href="classPoint.html">Point</a> a, <a class="code" href="classPoint.html">Point</a> b, <span class="keywordtype">int</span> thickness){
<a name="l00112"></a>00112                 <span class="keywordtype">float</span> x0=a.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[0];
<a name="l00113"></a>00113                 <span class="keywordtype">float</span> y0=a.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[1];
<a name="l00114"></a>00114                 <span class="keywordtype">float</span> x1=b.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[0];
<a name="l00115"></a>00115                 <span class="keywordtype">float</span> y1=b.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[1];
<a name="l00116"></a>00116                 <span class="keywordtype">float</span> INCR=0.00001;
<a name="l00117"></a>00117                 <span class="keywordtype">float</span> INCRX=0.00001;
<a name="l00118"></a>00118                 <span class="keywordtype">float</span> INCRY=0.00001;
<a name="l00119"></a>00119                 <span class="keywordtype">float</span> dx=x1-x0;
<a name="l00120"></a>00120                 <span class="keywordtype">float</span> dy=y1-y0;
<a name="l00121"></a>00121                 <span class="keywordtype">float</span> x=x0;
<a name="l00122"></a>00122                 <span class="keywordtype">float</span> y=y0;
<a name="l00123"></a>00123 
<a name="l00124"></a>00124                 <span class="keywordflow">if</span>(dx&lt;0){
<a name="l00125"></a>00125                         INCRX=0-INCRX;
<a name="l00126"></a>00126                         dx=0-dx;
<a name="l00127"></a>00127                 }
<a name="l00128"></a>00128                 <span class="keywordflow">if</span>(dy&lt;0){
<a name="l00129"></a>00129                         INCRY=0-INCRY;
<a name="l00130"></a>00130                         dy=0-dy;
<a name="l00131"></a>00131                 }
<a name="l00132"></a>00132                 <span class="keywordflow">if</span>(dx==0){
<a name="l00133"></a>00133                         <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0;i&lt;dy/INCR;i++){
<a name="l00134"></a>00134                                 glVertex2f(x0, y0);
<a name="l00135"></a>00135                                 y0+=INCRY;
<a name="l00136"></a>00136                         }
<a name="l00137"></a>00137                         <span class="keywordflow">return</span>;
<a name="l00138"></a>00138                 }
<a name="l00139"></a>00139                 <span class="keywordtype">float</span> tdy=2*dy;
<a name="l00140"></a>00140                 <span class="keywordtype">float</span> tdyminustdx=tdy-2*dx;
<a name="l00141"></a>00141 
<a name="l00142"></a>00142                 glPointSize(10.0f);
<a name="l00143"></a>00143                 <span class="keywordtype">float</span> p=tdy-dx;
<a name="l00144"></a>00144                 <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0;i&lt;(dx/INCR);i++){
<a name="l00145"></a>00145                         glVertex2f(x, y);
<a name="l00146"></a>00146 <span class="comment">/*                      for(int th=1; th&lt;thickness; th++){</span>
<a name="l00147"></a>00147 <span class="comment">                                glVertex2f(x+th*INCR, y);</span>
<a name="l00148"></a>00148 <span class="comment">                                glVertex2f(x-th*INCR, y);</span>
<a name="l00149"></a>00149 <span class="comment">                                glVertex2f(x, y+th*INCR);</span>
<a name="l00150"></a>00150 <span class="comment">                                glVertex2f(x, y-th*INCR);</span>
<a name="l00151"></a>00151 <span class="comment">                        }</span>
<a name="l00152"></a>00152 <span class="comment">*/</span>
<a name="l00153"></a>00153                         <span class="keywordflow">if</span>(p&lt;0){
<a name="l00154"></a>00154                                 x+=INCRX;
<a name="l00155"></a>00155                                 p=p+tdy;
<a name="l00156"></a>00156                         }
<a name="l00157"></a>00157                         <span class="keywordflow">else</span>{
<a name="l00158"></a>00158                                 x+=INCRX;
<a name="l00159"></a>00159                                 y+=INCRY;
<a name="l00160"></a>00160                                 p=p+tdyminustdx;
<a name="l00161"></a>00161                         }
<a name="l00162"></a>00162                 }
<a name="l00163"></a>00163         }
<a name="l00165"></a><a class="code" href="classOperations.html#a4596a2e2e90f52ef99fcbb768c14ca04">00165</a>         <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classOperations.html#a4596a2e2e90f52ef99fcbb768c14ca04" title="This function draws a circle at the given Point, and with radius.">midpointcircle</a>(<a class="code" href="classPoint.html">Point</a> point, <span class="keywordtype">float</span> radius){
<a name="l00166"></a>00166                 <span class="keywordtype">float</span> xx,yy;
<a name="l00167"></a>00167                 xx=point.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[0];
<a name="l00168"></a>00168                 yy=point.<a class="code" href="classPoint.html#ac993bda2df6e53c85a628d21be740d80" title="returns the 3 element float array which contains x, y, z coordinate of the Point">getCoords</a>()[1];
<a name="l00169"></a>00169                 <span class="keywordtype">float</span> p;
<a name="l00170"></a>00170                 <span class="keywordtype">float</span> x,y;
<a name="l00171"></a>00171                 y=radius;
<a name="l00172"></a>00172                 p=(5/4)-radius;
<a name="l00173"></a>00173                 <span class="keywordflow">for</span>(x=0.0;x&lt;=y;) {
<a name="l00174"></a>00174                         glVertex2f(xx+x, yy+y);
<a name="l00175"></a>00175                         glVertex2f(xx-x, yy+y);
<a name="l00176"></a>00176                         glVertex2f(xx+x, yy-y);
<a name="l00177"></a>00177                         glVertex2f(xx-x, yy-y);
<a name="l00178"></a>00178                         glVertex2f(xx+y, yy+x);
<a name="l00179"></a>00179                         glVertex2f(xx+y, yy-x);
<a name="l00180"></a>00180                         glVertex2f(xx-y, yy+x);
<a name="l00181"></a>00181                         glVertex2f(xx-y, yy-x);
<a name="l00182"></a>00182                         <span class="keywordflow">if</span>(p&lt;0)
<a name="l00183"></a>00183                         {
<a name="l00184"></a>00184                                 x=x+0.0001;
<a name="l00185"></a>00185                                 p=p+2*x+0.0001;
<a name="l00186"></a>00186                         }
<a name="l00187"></a>00187                         <span class="keywordflow">else</span>
<a name="l00188"></a>00188                         {
<a name="l00189"></a>00189                                 x=x+0.0001;
<a name="l00190"></a>00190                                 y=y-0.0001;
<a name="l00191"></a>00191                                 p=p+2*x-2*y+0.0001;
<a name="l00192"></a>00192                         }
<a name="l00193"></a>00193         
<a name="l00194"></a>00194                 }
<a name="l00195"></a>00195         }
<a name="l00196"></a>00196 
<a name="l00197"></a>00197 };
<a name="l00198"></a>00198 
<a name="l00202"></a><a class="code" href="classLine.html">00202</a> <span class="keyword">class </span><a class="code" href="classLine.html">Line</a>{
<a name="l00203"></a>00203         <span class="keyword">public</span>:
<a name="l00204"></a>00204                 <a class="code" href="classPoint.html">Point</a> a;
<a name="l00205"></a>00205                 <a class="code" href="classPoint.html">Point</a> b;
<a name="l00206"></a>00206                 <a class="code" href="classColor.html">Color</a> color;
<a name="l00207"></a>00207                 <span class="keywordtype">int</span> thickness;
<a name="l00209"></a><a class="code" href="classLine.html#a3f2db972115aec98f4b69c1182fc923c">00209</a>                 <a class="code" href="classLine.html#a3f2db972115aec98f4b69c1182fc923c" title="Constructor - Takes two Point objects from and to.">Line</a>(<a class="code" href="classPoint.html">Point</a> from, <a class="code" href="classPoint.html">Point</a> to){
<a name="l00210"></a>00210                         a=from;
<a name="l00211"></a>00211                         b=to;
<a name="l00212"></a>00212                         <a class="code" href="classColor.html">Color</a> color (0.0f, 0.0f, 0.0f);
<a name="l00213"></a>00213                         thickness=1;
<a name="l00214"></a>00214                 };
<a name="l00216"></a><a class="code" href="classLine.html#acc11b8a429d8cdd63ba6803dff5602b3">00216</a>                 <a class="code" href="classLine.html#acc11b8a429d8cdd63ba6803dff5602b3" title="Empty Constructor.">Line</a>(){};
<a name="l00218"></a><a class="code" href="classLine.html#a6cb6a1afa3c3e6e4d7ea540493b2b04c">00218</a>                 <a class="code" href="classLine.html#a6cb6a1afa3c3e6e4d7ea540493b2b04c" title="Constructor - Takes two point objects from and to, and a Color object.">Line</a>(<a class="code" href="classPoint.html">Point</a> from, <a class="code" href="classPoint.html">Point</a> to, <a class="code" href="classColor.html">Color</a> c){
<a name="l00219"></a>00219                         a=from;
<a name="l00220"></a>00220                         b=to;
<a name="l00221"></a>00221                         color=c;
<a name="l00222"></a>00222                         thickness=1;
<a name="l00223"></a>00223                 };
<a name="l00225"></a><a class="code" href="classLine.html#ab65c33d2958f31c95e08e872ba5d42c0">00225</a>                 <a class="code" href="classPoint.html">Point</a> <a class="code" href="classLine.html#ab65c33d2958f31c95e08e872ba5d42c0" title="Returns a Point - one of the from and two. Pass an int - 0 for &amp;#39;from&amp;#39; and...">getPoint</a>(<span class="keywordtype">int</span> index){
<a name="l00226"></a>00226                         <span class="keywordflow">if</span>(index){
<a name="l00227"></a>00227                                 <span class="keywordflow">return</span> b;
<a name="l00228"></a>00228                         }
<a name="l00229"></a>00229                         <span class="keywordflow">else</span>{
<a name="l00230"></a>00230                                 <span class="keywordflow">return</span> a;
<a name="l00231"></a>00231                         }
<a name="l00232"></a>00232                 }
<a name="l00233"></a>00233                 <span class="keywordtype">void</span> setPoints(<a class="code" href="classPoint.html">Point</a> p1, <a class="code" href="classPoint.html">Point</a> p2){
<a name="l00234"></a>00234                         a=p1;
<a name="l00235"></a>00235                         b=p2;
<a name="l00236"></a>00236                 }
<a name="l00238"></a><a class="code" href="classLine.html#ab6265993bf5acbc28830181c3e712f10">00238</a>                 <span class="keywordtype">void</span> <a class="code" href="classLine.html#ab6265993bf5acbc28830181c3e712f10" title="Draws the line itself using Operations::bresenham.">draw</a>(){
<a name="l00239"></a>00239                         color.<a class="code" href="classColor.html#a4dabfcb970d79805cad2fa59a2ca839d" title="Calls glColor3f(rgb[0],rgb[1],rgb[2]);.">set</a>();
<a name="l00240"></a>00240                         <a class="code" href="classOperations.html#a8657f54e02cac774a488d6e8731c5986" title="The generic bresenham. Works for any slope, any angle, anything!">Operations::bresenham</a>(a, b, thickness);
<a name="l00241"></a>00241                 }
<a name="l00243"></a><a class="code" href="classLine.html#abf2e027e417d3a1e3b42a36138ae3bfa">00243</a>                 <span class="keywordtype">void</span> <a class="code" href="classLine.html#abf2e027e417d3a1e3b42a36138ae3bfa" title="sets the thickness of the line">setThickness</a>(<span class="keywordtype">int</span> th){
<a name="l00244"></a>00244                         thickness=th;
<a name="l00245"></a>00245                 }
<a name="l00247"></a><a class="code" href="classLine.html#a4895d295a063bc854b8a015e63b18db6">00247</a>                 <span class="keywordtype">void</span> <a class="code" href="classLine.html#a4895d295a063bc854b8a015e63b18db6" title="increases thickness">incThickness</a>(<span class="keywordtype">int</span> th){
<a name="l00248"></a>00248                         thickness+=1;
<a name="l00249"></a>00249                 }
<a name="l00251"></a><a class="code" href="classLine.html#ad0622d97055421701a58f15cbc149f15">00251</a>                 <span class="keywordtype">void</span> <a class="code" href="classLine.html#ad0622d97055421701a58f15cbc149f15" title="decreases thickness">decThickness</a>(<span class="keywordtype">int</span> th){
<a name="l00252"></a>00252                         <span class="keywordflow">if</span>(thickness&gt;0){
<a name="l00253"></a>00253                                 thickness--;
<a name="l00254"></a>00254                         }
<a name="l00255"></a>00255                 }
<a name="l00256"></a>00256 };
<a name="l00257"></a>00257 
<a name="l00261"></a><a class="code" href="classCircle.html">00261</a> <span class="keyword">class </span><a class="code" href="classCircle.html">Circle</a>{
<a name="l00262"></a>00262         <span class="keyword">public</span>:
<a name="l00263"></a>00263                 <a class="code" href="classPoint.html">Point</a> centre;
<a name="l00264"></a>00264                 <a class="code" href="classColor.html">Color</a> c;
<a name="l00265"></a>00265                 <span class="keywordtype">int</span> state;
<a name="l00266"></a>00266                 <span class="keywordtype">float</span> radius;
<a name="l00268"></a><a class="code" href="classCircle.html#adb820287611a49de7062173b1c2993a5">00268</a>                 <a class="code" href="classCircle.html#adb820287611a49de7062173b1c2993a5" title="Constructor that takes only a Point and a radius.">Circle</a>(<a class="code" href="classPoint.html">Point</a> p, <span class="keywordtype">float</span> r){
<a name="l00269"></a>00269                         <a class="code" href="classColor.html">Color</a> c (0.0f, 0.0f, 0.0f);
<a name="l00270"></a>00270                         radius=r;
<a name="l00271"></a>00271                         centre=p;
<a name="l00272"></a>00272                 };
<a name="l00274"></a><a class="code" href="classCircle.html#a84f9ef0dd7c314d82059a7966eb055e1">00274</a>                 <a class="code" href="classCircle.html#a84f9ef0dd7c314d82059a7966eb055e1" title="Constructor that takes a Point, a radius, a Color.">Circle</a>(<a class="code" href="classPoint.html">Point</a> p, <span class="keywordtype">float</span> r, <a class="code" href="classColor.html">Color</a> color){
<a name="l00275"></a>00275                         c=color;
<a name="l00276"></a>00276                 radius=r;
<a name="l00277"></a>00277                         centre=p;
<a name="l00278"></a>00278                 };
<a name="l00280"></a><a class="code" href="classCircle.html#a4b389af47e8bd2949e5fda32fd92cbbf">00280</a>                 <a class="code" href="classPoint.html">Point</a> <a class="code" href="classCircle.html#a4b389af47e8bd2949e5fda32fd92cbbf" title="returns Point.">getCentre</a>(){
<a name="l00281"></a>00281                         <span class="keywordflow">return</span> centre;
<a name="l00282"></a>00282                 };
<a name="l00284"></a><a class="code" href="classCircle.html#a3a3f7166e7f629e44f9044b0e537eb22">00284</a>                 <span class="keywordtype">void</span> <a class="code" href="classCircle.html#a3a3f7166e7f629e44f9044b0e537eb22" title="calls midpointcircle() function to draw itself.">draw</a>(){
<a name="l00285"></a>00285                         c.<a class="code" href="classColor.html#a4dabfcb970d79805cad2fa59a2ca839d" title="Calls glColor3f(rgb[0],rgb[1],rgb[2]);.">set</a>();
<a name="l00286"></a>00286                         <a class="code" href="classOperations.html#a4596a2e2e90f52ef99fcbb768c14ca04" title="This function draws a circle at the given Point, and with radius.">Operations::midpointcircle</a>(centre, radius);
<a name="l00287"></a>00287                 }
<a name="l00288"></a>00288 };
<a name="l00292"></a><a class="code" href="classdatareader.html">00292</a> <span class="keyword">class </span><a class="code" href="classdatareader.html">datareader</a>{
<a name="l00293"></a>00293         vector&lt;vector&lt;Point&gt; &gt; allyears;
<a name="l00294"></a>00294         vector&lt;Point&gt; totals;
<a name="l00295"></a>00295         <span class="keywordtype">int</span> year, c, y, count;
<a name="l00296"></a>00296         <span class="keywordtype">int</span> years[50];
<a name="l00297"></a>00297         <span class="keywordtype">float</span> ymax,ymin,value[250],mean[50],total[50];
<a name="l00298"></a>00298         <span class="keyword">public</span>:
<a name="l00299"></a>00299                 <a class="code" href="classdatareader.html">datareader</a> () {year;c=0;y=0;count=0;};
<a name="l00300"></a>00300                 vector&lt;vector&lt;Point&gt; &gt; getInput(){
<a name="l00301"></a>00301                         <span class="keywordflow">return</span> allyears;
<a name="l00302"></a>00302                 }
<a name="l00303"></a>00303                 vector&lt;Point&gt; getTotals(){
<a name="l00304"></a>00304                         <span class="keywordflow">return</span> totals;
<a name="l00305"></a>00305                 }
<a name="l00306"></a>00306                 <span class="keywordtype">void</span> read(){
<a name="l00307"></a>00307                         ymax=0;
<a name="l00308"></a>00308                         ymin=0;
<a name="l00309"></a>00309                         <span class="keywordtype">float</span> totalmax=0;
<a name="l00310"></a>00310                         <span class="keywordtype">float</span> yvalue;
<a name="l00311"></a>00311                         scanf(<span class="stringliteral">&quot;%d&quot;</span>, &amp;count);
<a name="l00312"></a>00312                         <span class="keywordflow">for</span>(y=0;y&lt;count;y++){
<a name="l00313"></a>00313                                 years[y]=0;
<a name="l00314"></a>00314                         }
<a name="l00315"></a>00315                         <span class="keywordflow">for</span>(y=0;y&lt;count;y++){
<a name="l00316"></a>00316                                 scanf(<span class="stringliteral">&quot;%d&quot;</span>, &amp;year);
<a name="l00317"></a>00317                                 years[year-1960]=1;
<a name="l00318"></a>00318                         }
<a name="l00319"></a>00319                         <span class="keywordflow">for</span>(y=0;y&lt;count;y++)
<a name="l00320"></a>00320                         {
<a name="l00321"></a>00321                                 <span class="keywordflow">if</span>(years[y]){
<a name="l00322"></a>00322                                         vector &lt;Point&gt; input;
<a name="l00323"></a>00323                                         <span class="keywordflow">for</span>(c=0;c&lt;244;c++)
<a name="l00324"></a>00324                                         {
<a name="l00325"></a>00325                                                 scanf(<span class="stringliteral">&quot;%f&quot;</span>,&amp;yvalue);
<a name="l00326"></a>00326                                                 <span class="keywordflow">if</span>(c==0){
<a name="l00327"></a>00327                                                         ymin=yvalue;
<a name="l00328"></a>00328                                                         total[y]=yvalue;
<a name="l00329"></a>00329                                                 }
<a name="l00330"></a>00330                                                 <span class="keywordflow">else</span>{
<a name="l00331"></a>00331                                                         <span class="keywordflow">if</span>(yvalue&lt;ymin)
<a name="l00332"></a>00332                                                                 ymin=yvalue;
<a name="l00333"></a>00333                                                         total[y]+=yvalue;
<a name="l00334"></a>00334                                                 }
<a name="l00335"></a>00335                                                 <span class="keywordflow">if</span>(yvalue&gt;ymax)
<a name="l00336"></a>00336                                                 ymax=yvalue;
<a name="l00337"></a>00337                                                 <a class="code" href="classPoint.html">Point</a> p ((<span class="keywordtype">float</span>)c, yvalue);
<a name="l00338"></a>00338                                                 input.push_back(p);
<a name="l00339"></a>00339                                         }
<a name="l00340"></a>00340                                 allyears.push_back(input);
<a name="l00341"></a>00341                                 <span class="keywordflow">if</span>(y==0)
<a name="l00342"></a>00342                                         totalmax=total[y];
<a name="l00343"></a>00343                                 <span class="keywordflow">else</span> {
<a name="l00344"></a>00344                                         <span class="keywordflow">if</span>(totalmax&lt;total[y]){
<a name="l00345"></a>00345                                                 totalmax=total[y];
<a name="l00346"></a>00346                                         }
<a name="l00347"></a>00347                                 }
<a name="l00348"></a>00348                                 
<a name="l00349"></a>00349                         <span class="comment">//      std::cout&lt;&lt;mean[y]&lt;&lt;&quot;\n&quot;;       </span>
<a name="l00350"></a>00350                                 }
<a name="l00351"></a>00351                         }
<a name="l00352"></a>00352                         <span class="keywordflow">for</span>(y=0;y&lt;count;y++){
<a name="l00353"></a>00353                                 total[y]=total[y]/totalmax;
<a name="l00354"></a>00354                                 <a class="code" href="classPoint.html">Point</a> tot ((<span class="keywordtype">float</span>)y, total[y]);
<a name="l00355"></a>00355                                 totals.push_back( tot);
<a name="l00356"></a>00356                                 mean[y]=total[y]/(float)244;
<a name="l00357"></a>00357                         }
<a name="l00358"></a>00358                 }
<a name="l00359"></a>00359 };
<a name="l00360"></a><a class="code" href="classGraph.html">00360</a> <span class="keyword">class </span><a class="code" href="classGraph.html">Graph</a>{
<a name="l00361"></a>00361         <span class="keyword">public</span>:
<a name="l00363"></a><a class="code" href="classGraph.html#afe133cc33b87353c3214cc87ed4e13a1">00363</a>                 <span class="keywordtype">int</span> <a class="code" href="classGraph.html#afe133cc33b87353c3214cc87ed4e13a1" title="Number of divisions on each axes.">x_div</a>, y_div, x_avail, y_avail;
<a name="l00365"></a><a class="code" href="classGraph.html#ac3b302755470c4a41222a02d2316d659">00365</a>                 <span class="keywordtype">int</span>* <a class="code" href="classGraph.html#ac3b302755470c4a41222a02d2316d659" title="Labels &amp;lt;&amp;lt;for each axis.">x_labels</a>, y_labels;
<a name="l00366"></a>00366                 <span class="keywordtype">int</span> drawline;
<a name="l00367"></a>00367                 vector&lt;vector&lt;Point&gt; &gt; data;    
<a name="l00369"></a><a class="code" href="classGraph.html#ae4c72b8ac4d693c49800a4c7e273654f">00369</a>                 <a class="code" href="classGraph.html#ae4c72b8ac4d693c49800a4c7e273654f" title="Constructor that takes data, x divisions, y divisions.">Graph</a> (){drawline=1;
<a name="l00370"></a>00370                 };
<a name="l00371"></a>00371                 <span class="keywordtype">void</span> read(){
<a name="l00372"></a>00372                         <a class="code" href="classdatareader.html">datareader</a> d1;
<a name="l00373"></a>00373                         d1.read();
<a name="l00374"></a>00374                         data.push_back( d1.getTotals() );
<a name="l00375"></a>00375                 }                       
<a name="l00376"></a>00376                         
<a name="l00378"></a><a class="code" href="classGraph.html#a397e6e5732512984591030d633971ba5">00378</a>                 <span class="keywordtype">void</span> <a class="code" href="classGraph.html#a397e6e5732512984591030d633971ba5" title="Test drawing function.">plot</a>(){
<a name="l00379"></a>00379                         <a class="code" href="classPoint.html">Point</a> origin (0.5f, 0.5f);
<a name="l00380"></a>00380                         <a class="code" href="classPoint.html">Point</a> x_end (X-0.5f, 0.5f);
<a name="l00381"></a>00381                         <a class="code" href="classPoint.html">Point</a> y_end (0.5f, Y-0.5f);
<a name="l00382"></a>00382                         <a class="code" href="classLine.html">Line</a> x_axis (origin, x_end);
<a name="l00383"></a>00383                         <a class="code" href="classLine.html">Line</a> y_axis (origin, y_end);
<a name="l00384"></a>00384                         x_axis.<a class="code" href="classLine.html#abf2e027e417d3a1e3b42a36138ae3bfa" title="sets the thickness of the line">setThickness</a>(10);
<a name="l00385"></a>00385                         x_axis.<a class="code" href="classLine.html#ab6265993bf5acbc28830181c3e712f10" title="Draws the line itself using Operations::bresenham.">draw</a>();
<a name="l00386"></a>00386                         y_axis.<a class="code" href="classLine.html#ab6265993bf5acbc28830181c3e712f10" title="Draws the line itself using Operations::bresenham.">draw</a>();
<a name="l00387"></a>00387                         vector&lt;vector&lt;Point&gt; &gt;::iterator i;
<a name="l00388"></a>00388                         vector&lt;Point&gt;::iterator j;
<a name="l00389"></a>00389                         <span class="keywordflow">for</span>(i=data.begin(); i!=data.end();i++){
<a name="l00390"></a>00390                                 <span class="keywordflow">for</span>(j=i-&gt;begin();j!=i-&gt;end();j++){
<a name="l00391"></a>00391                                         <span class="keywordtype">float</span> a=j-&gt;getCoords()[0];
<a name="l00392"></a>00392                                         <span class="keywordtype">float</span> b=j-&gt;getCoords()[1];
<a name="l00393"></a>00393                                         glVertex2f(a+0.5f, b*Y+0.5f);
<a name="l00394"></a>00394                                         <span class="keywordflow">if</span>(j!=i-&gt;end()){
<a name="l00395"></a>00395                                                 <span class="keywordtype">float</span> c=(j+1)-&gt;getCoords()[0];
<a name="l00396"></a>00396                                                 <span class="keywordtype">float</span> d=(j+1)-&gt;getCoords()[1];
<a name="l00397"></a>00397                                                 <a class="code" href="classPoint.html">Point</a> p1 (a+0.5f, b*Y+0.5f);
<a name="l00398"></a>00398                                                 <a class="code" href="classPoint.html">Point</a> p2 (c+0.5f, d*Y+0.5f);
<a name="l00399"></a>00399                                                 <a class="code" href="classLine.html">Line</a> l (p1, p2);
<a name="l00400"></a>00400                                                 l.<a class="code" href="classLine.html#ab6265993bf5acbc28830181c3e712f10" title="Draws the line itself using Operations::bresenham.">draw</a>();
<a name="l00401"></a>00401                                         }       
<a name="l00402"></a>00402                                 }
<a name="l00403"></a>00403                         }
<a name="l00404"></a>00404                                                 
<a name="l00405"></a>00405 
<a name="l00406"></a>00406 
<a name="l00407"></a>00407                         
<a name="l00408"></a>00408                 }
<a name="l00409"></a>00409 
<a name="l00410"></a>00410 };
<a name="l00411"></a>00411 
>>>>>>> 09950c976b5a614a45a67cda2544cee9295383b3
</pre></div></div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Variables</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<<<<<<< HEAD
<hr class="footer"/><address style="text-align: right;"><small>Generated on Tue Apr 17 23:40:53 2012 by&nbsp;
=======
<hr class="footer"/><address style="text-align: right;"><small>Generated on Tue Apr 3 13:03:27 2012 by&nbsp;
>>>>>>> 09950c976b5a614a45a67cda2544cee9295383b3
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.3 </small></address>
</body>
</html>
